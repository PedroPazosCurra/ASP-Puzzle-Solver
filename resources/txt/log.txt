############ [23:43] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(4).
person(jose; martina; claudia; pedro).
language(german; spanish; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
# Answer set resuelto: 
	seated(jose,4). seated(martina,2). seated(claudia,3). seated(pedro,1).
# Explicaci�n LN: Pedro is seated in the first chair, Claudia is seated in the 2, Martin in the third and none other person is seated.
# M�dulo gr�fico: OK

############ [23:45] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose).
# Answer set resuelto: 
	seated(alberto,1). seated(carlos,3). seated(carolina,6). seated(paco,10). seated(lucia,5). seated(isabel,7). seated(jose,9). seated(martina,4). seated(claudia,2). seated(pedro,8).
# Explicaci�n LN: Here is the output:

Teresa is seated in the first chair, Alberto in the same position, Claudia is seated in the second one, Carlos in the 3, Lucia in the 5, Isabel in the 7, Paco in the tenth and finally Jose in the ninth, Carolina in the sixth, Martina in the 4 and Pedro in Manolo's usual spot at the eighth.
# M�dulo gr�fico: OK

############ [23:54] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, french). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carl.
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [23:54] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; arabic).

speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).

not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(paco, lucia).
next_to(carolina, french).
next_to(claudia, carlos).
not_next_to(carolina, french).
# Answer set resuelto: 
	seated(alberto,5). seated(carlos,3). seated(carolina,10). seated(paco,8). seated(lucia,9). seated(isabel,1). seated(jose,7). seated(martina,2). seated(claudia,4). seated(pedro,6).
# Explicaci�n LN: Isabel is seated in the first chair, Martina in the second one, Claudia in the fourth one, Jose is seated in the seventh, Alberto is seated in the fifth, Carolina is seated in the ninth, Lucia is seated in the tenth and Paco is nowhere mentioned in the data.
# M�dulo gr�fico: OK

############ [23:59] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(carla, french).
next_to(claudia, carlos).
not_next_to(claudia, pedro).
not_next_to(carlitos, julian).
next_to(paco, lucia).
# Answer set resuelto: 
	seated(alberto,1). seated(carlos,9). seated(carolina,6). seated(paco,3). seated(lucia,2). seated(isabel,7). seated(jose,10). seated(martina,5). seated(claudia,8). seated(pedro,4).
# Explicaci�n LN: Teresa is seated in the first chair, Lucia in the second, Paco in the third, Alberto in the 1, Jose in the 4, Pedro in the 4, Manolo missing, Martina in the 5, Claudia in the 8, Carolina in the 6, Isabel in the 7, Carlos in the 9 and another one Jos� in the 10.
# M�dulo gr�fico: OK

############ [0:1] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
next_to(carolina, french).
speaks(carolina, basque).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:1] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
next_to(carolina, french).
speaks(carolina, basque).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:1] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carlos, claudia).
next_to(carolina, french).
next_to(paco, lucia).
next_to(carlos, claudia).
next_to(carolina, french).
speaks(carolina, basque).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:1] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(carolina, french).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:1] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(carolina, french).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:5] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(claudia, carlos).
next_to(paco, lucia).
opposite(paco, lucia).
speaks(carolina, basque).
next_to(carolina, french).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:5] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(carolina, french).
next_to(paco, lucia).
next_to(clausia, carlos).
not_next_to(claudia, pedro).
not_next_to(carolina, french).
# Answer set resuelto: 
	seated(alberto,4). seated(carlos,3). seated(carolina,9). seated(paco,10). seated(lucia,1). seated(isabel,5). seated(jose,7). seated(martina,2). seated(claudia,8). seated(pedro,6).
# Explicaci�n LN: Lucia is seated in the first chair, Martina in the second, Claudia in the eighth, Alberto in the fourth, Carlos in the third, Carolina is seated in the ninth, Paco in the tenth, Jose is seated in the seventh and Isabel is seated in the fifth seat.
# M�dulo gr�fico: OK

############ [0:20] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(claudia, carlos).
next_to(carlos, carolina).
opposite(paco, lucia).
opposite(carolina, french).
next_to(carolina, french).
# Answer set resuelto: 
	seated(alberto,5). seated(carlos,1). seated(carolina,10). seated(paco,4). seated(lucia,9). seated(isabel,6). seated(jose,8). seated(martina,3). seated(claudia,2). seated(pedro,7).
# Explicaci�n LN: Pedro is seated in the seventh chair, Claudia is seated in the second, Martina is seated in the third, Paco is seated in the fourth, Alberto is seated in the fifth, Carlos is seated in the first one, Isabel is seated in the sixth, Lucia is seated in the ninth and Carolina is seated in the tenth.
# M�dulo gr�fico: OK

############ [0:32] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german).
not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina).
next_to(isabel, french). next_to(carolina, french). next_to(claudia, carlos).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:32] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; pedro).
language(german; spanish; galician; catalan; basque; french; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(carolina, french).
next_to(carlos, claudia).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:32] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	seats_number(10). 
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic). 
speaks(claudia, spanish). speaks(martina, german). 
speaks(pedro, arabic). speaks(jose, arabic). 
not_next_to(claudia, pedro). next_to(pedro, arabic). 
opposite(martina, jose). opposite(alberto, carolina). 
next_to(isabel, french). next_to(carolina, french). 
next_to(claudia, carlos). opposite(paco, lucia).
# Answer set resuelto: 
	seated(alberto,3). seated(carlos,7). seated(carolina,8). seated(paco,4). seated(lucia,9). seated(isabel,2). seated(jose,10). seated(martina,5). seated(claudia,6). seated(pedro,1).
# Explicaci�n LN: Teresa is seated in the first chair, Manolo in the second one, Alberto is not present, Carlos is not present, Carolina is not present, Paco is not present, Lucia is not present, Isabel is seated in the 2nd one, Jose is seated in the 10th one, Martina is seated in the 5th one and Claudia is seated in the 6th one.
# M�dulo gr�fico: OK

############ [0:42] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; pacific; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(carlos, claudia).
next_to(paco, lucia).
next_to(carolina, french).
not_next_to(carolina, french).
next_to(carlos, claudia).
next_to(pedro, arabic).
next_to(isabel, pedro).
next_to(carolina, french).
# Answer set resuelto: 
	seated(alberto,1). seated(carlos,3). seated(carolina,6). seated(pacific,5). seated(lucia,10). seated(isabel,9). seated(jose,7). seated(martina,2). seated(claudia,4). seated(pedro,8).
# Explicaci�n LN: Teresa is seated in the first chair, Alberto in the same, Manolo in the second, Jose in the seventh, Claudia in the fourth one, Isabel in the ninth, Carlos in the third, Maria in the sixth, Martina in the second one, Pacific is seated in the fifth and Lucia is seated in the tenth.
# M�dulo gr�fico: OK

############ [0:46] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
next_to(pedro, arabic).
not_next_to(claudia, pedro).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(carlos, claudia).
next_to(carlos, carolina).
next_to(carolina, french).
next_to(carlos, pedro).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:46] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(carolina, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [0:46] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).
# Answer set resuelto: 
	seated(alberto,4). seated(carlos,2). seated(carolina,9). seated(paco,5). seated(lucia,10). seated(isabel,8). seated(jose,6). seated(martina,1). seated(claudia,3). seated(pedro,7).
# Explicaci�n LN: Martina is seated in the first chair, Claudia is seated in the third, Alberto is not mentioned, Carlos in the second, Paco in the fifth, Lucia in the tenth, Isabel in the eighth, Jose in the sixth, Carolina is seated in the ninth and Pedro in the seventh.
# M�dulo gr�fico: OK

############ [1:13] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:13] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). 
type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish). 

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). 

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). 

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). 

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(3, milk). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,5). has(brittish,pet,horse). has(brittish,drink,water). has(brittish,tobacco_brand,blends). has(danish,color,yellow). has(danish,house,4). has(danish,pet,cat). has(danish,drink,tea). has(danish,tobacco_brand,dunhill). has(german,color,white). has(german,house,3). has(german,pet,fish). has(german,drink,milk). has(german,tobacco_brand,prince). has(norwegian,color,green). has(norwegian,house,1). has(norwegian,pet,bird). has(norwegian,drink,coffee). has(norwegian,tobacco_brand,pall_mall). has(swedish,color,blue). has(swedish,house,2). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output:

The British person lives in the fifth house with a horse and drinks water. He also smokes Blends tobacco. The Danish person lives in the yellow house, has a cat as a pet, drinks tea, and smokes Dunhill tobacco. The German person lives in the white house, has a fish as a pet, drinks milk, and smokes Prince tobacco. The Norwegian person lives in the first house, has a bird as a pet, drinks coffee, and smokes Pall Mall tobacco. His house is colored green. The Swedish person lives in the blue house, has a dog as a pet, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [1:15] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V).
house(1..5).
living_place(house, V) :- house(V).

type(color, V) :- color(V).
color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).

same_place(3, milk).
same_place(norwegian, 1).
next_to(dog, norwegian).
next_to(dunhill, horse).

same_place(blends, water).

same_place(blends, cat).
next_to(blends, blue_master).
same_place(blue_master, beer).
same_place(prince, german).

next_to(norwegian, blue).
same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:15] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,3). has(brittish,pet,bird). has(brittish,drink,milk). has(brittish,tobacco_brand,pall_mall). has(danish,color,blue). has(danish,house,2). has(danish,pet,horse). has(danish,drink,tea). has(danish,tobacco_brand,blends). has(german,color,green). has(german,house,4). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,color,yellow). has(norwegian,house,1). has(norwegian,pet,cat). has(norwegian,drink,water). has(norwegian,tobacco_brand,dunhill). has(swedish,color,white). has(swedish,house,5). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: The Swedish person's house is white, located at number 5, keeps a dog as pet, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [1:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V).
house(1..5).
living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(yellow; green; white; red; blue).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
left(owner_of_green_house, coffee).

same_place(pall_mall_smoker, bird).
same_place(owner_of_yellow_house, dunhill).

same_place(milk_drinker, 3).

same_place(norwegian, 1).
next_to(norwegian, blue).

next_to(blends_smoker, water).
next_to(blends_smoker, cat).

next_to(horse_keeper, dunhill).

same_place(blue_master_drinker, beer).
same_place(german, prince).

next_to(norwegian, blue).

image("norwegian", "norwegian_image").

type(image, V) :- image(V).
image(norwegian_image).

person_image(brittish, "british_image").
person_image(swedish, "swedish_image").
person_image(danish, "danish_image").
person_image(german, "german_image").
person_image(norwegian, "norwegian_image").

type(person_image, V) :- person_image(V).
person_image(brittish_image).
person_image(swedish_image).
person_image(danish_image).
person_image(german_image).
person_image(norwegian_image).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). same_place(brittish, red). same_place(swedish, dog).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). same_place(danish, tea). same_place(green, coffee).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(pall_mall, bird). same_place(dunhill, yellow). same_place(blends, cat). same_place(blends, water). same_place(blue_master, beer). same_place(prince, german).

same_place(norwegian, 1). next_to(norwegian, blue). next_to(blends, cat). next_to(horse, dunhill). next_to(blends, water). 

Please let me know if this meets the requirements.
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [1:17] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(dunhill, yellow).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:17] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). 
type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). 

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,3). has(brittish,pet,bird). has(brittish,drink,milk). has(brittish,tobacco_brand,pall_mall). has(danish,color,blue). has(danish,house,2). has(danish,pet,horse). has(danish,drink,tea). has(danish,tobacco_brand,blends). has(german,color,green). has(german,house,4). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,color,yellow). has(norwegian,house,1). has(norwegian,pet,cat). has(norwegian,drink,water). has(norwegian,tobacco_brand,dunhill). has(swedish,color,white). has(swedish,house,5). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output:

The British person lives in the third house with a bird as a pet, drinks milk, and smokes Pall Mall tobacco. The Danish house is blue, has a horse as a pet, drinks tea, and smokes Blends tobacco. The German house is green, has a fish as a pet, drinks coffee, and smokes Prince tobacco. The Norwegian house is yellow, has a cat as a pet, drinks water, and smokes Dunhill tobacco. The Swedish house is white, has a dog as a pet, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [1:33] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish). 

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(red). color(yellow; green; white; blue).

living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Answer set resuelto: 
	has(brittish,house,3). has(brittish,pet,horse). has(brittish,drink,milk). has(brittish,tobacco_brand,blends). has(danish,house,4). has(danish,pet,cat). has(danish,drink,tea). has(danish,tobacco_brand,dunhill). has(german,house,2). has(german,pet,fish). has(german,drink,water). has(german,tobacco_brand,prince). has(norwegian,house,1). has(norwegian,pet,bird). has(norwegian,drink,coffee). has(norwegian,tobacco_brand,pall_mall). has(swedish,house,5). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: The British person lives in the house with the number 3, owns a horse as a pet, drinks milk, and smokes Blend cigarettes. The Danish person lives in the house with the number 4, keeps a cat, drinks tea, and smokes Dunhill tobacco. The German person lives in the house with the number 2, owns a fish, drinks water, and smokes Prince tobacco. The Norwegian person lives in the house with the number 1, has a bird as a pet, drinks coffee, and smokes Pall Mall tobacco. The Swedish person lives in the house with the number 5, has a dog as a pet, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [1:42] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V).
color(white; green; yellow; red; blue).

type(house, V) :- house(V).
house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
right(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
right(norwegian, blue).
next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:42] LOG ############:

### Intento 1 de 4  ###

############ [1:46] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).
type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

person(brittish; danish; german; norwegian; swedish).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [1:46] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).

same_place(green, coffee).
same_place(pall_mall, bird).

same_place(yellow, dunhill).
same_place(third, milk).

same_place(norwegian, 1).
next_to(blue, norwegian).

next_to(blends, cat).
next_to(dunhill, horse).

same_place(blue_master, beer).
same_place(german, prince).

next_to(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,3). has(brittish,pet,bird). has(brittish,tobacco_brand,pall_mall). has(danish,color,blue). has(danish,house,2). has(danish,pet,horse). has(danish,tobacco_brand,blue_master). has(german,color,white). has(german,house,5). has(german,pet,cat). has(german,tobacco_brand,prince). has(norwegian,color,yellow). has(norwegian,house,1). has(norwegian,pet,fish). has(norwegian,tobacco_brand,dunhill). has(swedish,color,green). has(swedish,house,4). has(swedish,pet,dog). has(swedish,tobacco_brand,blends).
# Explicaci�n LN: Here is the output:

The British person's house has the number 3, has a bird as pet, and smokes Pall Mall tobacco. The Danish person lives in the house with the number 2, has a horse as pet, and smokes Blue Master tobacco. The German person's house has the number 5, has a cat as pet, and smokes Prince tobacco. The Norwegian person lives in the house with the number 1, has a fish as pet, and smokes Dunhill tobacco.
# M�dulo gr�fico: OK

############ [13:9] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:9] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:9] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:9] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:9] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:10] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:10] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:10] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:10] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:10] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:13] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:13] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:13] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:13] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:13] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [13:15] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5).

color(yellow).
color(green).
color(white).
color(red).
color(blue).

person(brittish; danish; german; norwegian; swedish).

pet(dog).
pet(fish).
pet(bird).
pet(horse).
pet(cat).

drink(beer).
drink(coffee).
drink(tea).
drink(milk).
drink(water).

tobacco_brand(blends).
tobacco_brand(blue_master).
tobacco_brand(dunhill).
tobacco_brand(pall_mall).
tobacco_brand(prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

next_to(green, white).
next_to(owner_of_green_house, coffee).
next_to(person_with_bird, pall_mall).
next_to(owner_of_yellow_house, dunhill).
next_to(man_drinking_milk, 3).

same_place(norwegian, 1).
same_place(3, blue).
next_to(norwegian, blue).

next_to(blends_smoker, cat).
next_to(dunhill_smoker, horse).
next_to(blue_master_smoker, beer).
next_to(prince_smoker, german).
next_to(blends_smoker, water).same_place(danish, tea).
same_place(blends_smoker, water).
same_place(dunhill_smoker, horse).
same_place(blue_master_smoker, beer).
same_place(prince_smoker, german).
same_place(blues_smoker, cat).
same_place(blends_smoker, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:15] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

 person(german; danish; swedish; norwegian; british).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(1, norwegian).

same_place(2, norwegian).

same_place(3, norwegian).

same_place(4, norwegian).

same_place(5, norwegian).

same_place(blends, cat).

same_place(dunhill, horse).

same_place(beer, blue_master).

same_place(coffee, swedish).

same_place(tea, danish).

same_place(milk, 3).

same_place(prince, german).

same_place(blends, water).

same_place(1, 2).same_place(3, 4).
same_place(4, 5).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:15] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).
 person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, first_house).
same_place(blends, cat).
same_place(dunhill, horse).
same_place(blue_master, beer).
same_place(prince, german).
next_to(norwegian, blue).
next_to(blends, water).
# Answer set resuelto: 
	has(brittish,house,4). has(brittish,pet,horse). has(brittish,drink,water). has(brittish,tobacco_brand,dunhill). has(danish,house,2). has(danish,pet,bird). has(danish,drink,tea). has(danish,tobacco_brand,pall_mall). has(german,house,1). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,house,3). has(norwegian,pet,cat). has(norwegian,drink,milk). has(norwegian,tobacco_brand,blends). has(swedish,house,5). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output for the last iteration:

The British person lives in the fourth house and has a horse as pet, also drinks water and smokes Dunhill tobacco. The Danish person lives in the second house, keeps a bird as pet, drinks tea and prefers Pall Mall tobacco. The German person resides in the first house, has a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the third house, has a cat as pet, drinks milk and smokes Blends tobacco.
# M�dulo gr�fico: OK

############ [13:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5).

color(Yellow).
color(Green).
color(White).
color(Red).
color(Blue).

person(Brittish).
person(Danish).
person(German).
person(Norwegian).
person(Swedish).

pet(Dog).
pet(Fish).
pet(Bird).
pet(Horse).
pet(Cat).

drink(Beer).
drink(Coffee).
drink(Tea).
drink(Milk).
drink(Water).

tobacco_brand(Blends).
tobacco_brand(Blue_Master).
tobacco_brand(Dunhill).
tobacco_brand(Pall_Mall).
tobacco_brand(Prince).

same_place(Brittish, Red).
same_place(Swedish, Dog).
same_place(Danish, Tea).
same_place(Green, Coffee).
same_place(Pall_Mall, Bird).

same_place(Yellow, Dunhill).
same_place(3, Milk).
same_place(Norwegian, Blue).
same_place(Blends, Water).
same_place(Horse, Dunhill).
same_place(German, Prince).
same_place(Blue, Norwegian).
same_place(Blends, Cat).
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [13:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	1. Create the basic structure:
   - type(type, V) :- type(V).

2. Define the possible types:
   - type(color, V) :- color(V).
   - type(house, V) :- house(V).
   - 
   - type(pet, V) :- pet(V).
   - type(drink, V) :- drink(V).
   - type(tobacco_brand, V) :- tobacco_brand(V).

3. Define the specific instances of the defined types:
   - color(Yellow; Green; White; Red; Blue).
   - house(1..5).
   - person(Brittish; Danish; German; Norwegian; Swedish).
   - pet(Dog; Fish; Bird; Horse; Cat).
   - drink(Beer; Coffee; Tea; Milk; Water).
   - tobacco_brand(Blends; Blue_Master; Dunhill; Pall_Mall; Prince).

4. Define the relationships between the instances of the defined types:
   - living_place(house, V) :- house(V).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :- living_place(A, B).
   - same_place(A, B) :-.
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [13:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

 person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
same_place(green_house, coffee).
same_place(pall_mall, bird).
same_place(yellow_house, dunhill).
same_place(3, milk).
same_place(norwegian, blue_house).
same_place(blends, water).
same_place(horse, dunhill).
same_place(blends, cat).
same_place(prince, german).
same_place(blends, water).
same_place(norwegian, blue_house).
same_place(beer, pall_mall).
same_place(tea, danish).
same_place(coffee, german).
same_place(blends, water).
# Answer set resuelto: 
	has(brittish,house,4). has(brittish,pet,bird). has(brittish,drink,beer). has(brittish,tobacco_brand,pall_mall). has(danish,house,2). has(danish,pet,horse). has(danish,drink,tea). has(danish,tobacco_brand,dunhill). has(german,house,1). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,house,5). has(norwegian,pet,cat). has(norwegian,drink,water). has(norwegian,tobacco_brand,blends). has(swedish,house,3). has(swedish,pet,dog). has(swedish,drink,milk). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output:

The British person lives in the fourth house, has a bird as a pet, drinks beer and smokes Pall Mall tobacco. The Danish person lives in the second house, has a horse as a pet, drinks tea and smokes Dunhill tobacco. The German person lives in the first house, has a fish as a pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the fifth house, has a cat as a pet, drinks water and smokes Blends tobacco.
# M�dulo gr�fico: OK

############ [13:45] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(owner_of_green_house, coffee).

same_place(person_who_smokes_pall_mall, bird).

same_place(owner_of_yellow_house, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(norwegian, blue).

next_to(man_who_smokes_blends, cat).

next_to(man_who_keeps_horse, dunhill).

next_to(man_who_smokes_blue_master, beer).

same_place(german, prince).

next_to(blue_house, norwegian).

next_to(man_who_smokes_blends, water).same_place(blends, cat).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:45] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

 person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

same_place(german, prince).

next_to(green, white).

same_place(coffee, green).

next_to(pall_mall, bird).

same_place(dunhill, yellow).

same_place(milk, 3).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(norwegian, blue).

next_to(blends, water).
# Answer set resuelto: 
	has(brittish,color,blue). has(brittish,house,5). has(brittish,pet,cat). has(brittish,drink,water). has(brittish,tobacco_brand,prince). has(danish,color,red). has(danish,house,4). has(danish,pet,horse). has(danish,drink,milk). has(danish,tobacco_brand,pall_mall). has(german,color,white). has(german,house,3). has(german,pet,fish). has(german,drink,tea). has(german,tobacco_brand,dunhill). has(norwegian,color,green). has(norwegian,house,2). has(norwegian,pet,bird). has(norwegian,drink,coffee). has(norwegian,tobacco_brand,blue_master). has(swedish,color,yellow). has(swedish,house,1). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blends).
# Explicaci�n LN: Here is the output:

The British person's house is blue and it's number 5. He has a cat as a pet, drinks water, and uses Prince cigarettes. The Danish person has a red house, number 4, with a horse as a pet, drinking milk, using Pall Mall cigarettes. The German person has a white house, number 3, with a fish as a pet, drinking tea, using Dunhill cigarettes. The Norwegian person has a green house, number 2, with a bird as a pet, drinking coffee, using Blue Master cigarettes.
# M�dulo gr�fico: OK

############ [13:46] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	1. Define all the entities:
   - Person: german, british, norwegian, swedish, danish, italian, spanish, french, portuguese, turkish, iranian, irish, filipino, sudafrican, congolese, egyprian, galician, chinese, russian, japanese, albanese, afgani, persian
   - Pet: dog, cat, fish, bird, horse, rabbit, rat, mole, tiger
   - Drink: coffee, tea, beer, milk, water, soda, gazpacho, horchata, wine, whiskey
   - Color: red, green, blue, white, yellow, beige, purple, orange, grey, brown, black
   - House: house1, house2, ..., houseX (where x is the total number of houses)
   - Tobacco brand: blenders, blue_master, dunhill, pall_mall, prince

2. Assign each entity to its corresponding class:
   - Person: person(person_name)
   - Pet: pet(type, name)
   - Drink: drink(type, name)
   - Color: color(type, name)
   - House: house(number)
   - Tobacco Brand: tobacco_brand(type, name)

3. Define relationships between entities:
   - Living in the same house: living_place(person, house)
   - Drinking: drink(drink, type)
   - Smoking: tobacco_brand(tobacco_brand, type)
   - Neighbors: next_to(person1, person2)
   - Pets: pet(type, name)
   - Colors: color(type, name)
   - Brands: tobacco_brand(tobacco_brand, type)4. Generate the solution based on the provided rules:
prolog
% Define entities
person(german). person(brittish). person(norwegian). person(swedish). person(danish). person(italian). person(spanish). person(french). person(portuguese). person(turkish). person(irish). person(filipino). person(sudafrican). person(congolese). person(egyprian). person(galician). person(chinese). person(russian). person(japanese). person(albanese). person(afgan). person(persian)
pet(dog). pet(cat). pet(fish). pet(bird). pet(horse). pet(rabbit). pet(rat). pet(mole). pet(tiger)
drink(coffee). drink(tea). drink(beer). drink(milk). drink(water). drink(soda). drink(gazpacho). drink(horchata). drink(wine). drink(whiskey)
color(red). color(green). color(blue). color(white). color(yellow). color(beige). color(purple). color(orange). color(grey). color(brown). color(black)
house(1). house(2). house(3). house(4). house(5). house(6). house(7). house(8). house(9). house(10). house(11). house(12). house(13). house(14)
tobacco_brand(blenders). tobacco_brand(blue_master). tobacco_brand(dunhill). tobacco_brand(pall_mall). tobacco_brand(prince)% Define relationships
living_place(german, house1).
living_place(brittish, house4).
living_place(norwegian, house1).
living_place(swedish, house12).
living_place(danish, house3).
living_place(italian, house5).
living_place(spanish, house6).
living_place(french, house7).
living_place(portuguese, house8).
living_place(turkish, house9).
living_place(irish, house10).
living_place(filipino, house11).
living_place(sudafrican, house13).
living_place(congolese, house14).
living_place(egyprian, house15).
living_place(galician, house16).
living_place(chinese, house17).
living_place(russian, house18).
living_place(japanese, house19).
living_place(albanese, house20).
living_place(afgan, house21).
living_place(persian, house22)
...
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [13:46] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).
same_place(swedish, 2).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

 person(brittish; danish; german; norwegian; swedish).

pet(dog; fish; bird; horse; cat).

drink(beer; coffee; tea; milk; water).

tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(norwegian, 1).
same_place(brittish, red).

type(drink, V) :- drink(V). drink(tea; milk; water).

same_place(blends, 4).
next_to(blends, cat).

same_place(dunhill, 5).
next_to(dunhill, horse).

same_place(pall_mall, bird).
next_to(pall_mall, norwegian).

same_place(blue_master, 3).
next_to(blue_master, beer).

same_place(prince, 4).
next_to(prince, german).same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:46] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

 person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V). house(1..5).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). next_to(green, white). same_place(white, coffee). same_place(pall_mall, bird). same_place(dunhill, yellow). same_place(milk, 3). same_place(norwegian, blue). same_place(blends, water). next_to(blends, cat). next_to(dunhill, horse). same_place(blue_master, beer). same_place(prince, german). next_to(blue, norwegian). same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:46] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5).

color(Yellow).
color(Green).
color(White).
color(Red).
color(Blue).

person(Brittish).
person(Danish).
person(German).
person(Norwegian).
person(Swedish).

pet(Dog).
pet(Fish).
pet(Bird).
pet(Horse).
pet(Cat).

drink(Beer).
drink(Coffee).
drink(Tea).
drink(Milk).
drink(Water).

tobacco_brand(Blends).
tobacco_brand(Blue_Master).
tobacco_brand(Dunhill).
tobacco_brand(Pall_Mall).
tobacco_brand(Prince).

same_place(Brittish, Red).

same_place(Swedish, Dog).

same_place(Danish, Tea).

same_place(Green, Coffee).
same_place(White, Coffee).

same_place(Pall_Mall, Bird).

same_place(Yellow, Dunhill).

same_place(3, Milk).

same_place(Norwegian, Blue).

same_place(Blends, Cat).
same_place(Blends, Water).

same_place(Dunhill, Horse).same_place(German, Prince).
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [13:46] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5).
living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).


person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(1, norwegian).
same_place(2, danish).
same_place(3, swedish).
same_place(4, brittish).
same_place(5, german).

same_place(yellow, dunhill).
same_place(green, coffee).
same_place(red, british).
same_place(blue, swedish).

same_place(horse, norwegian).
same_place(dog, swedish).
same_place(bird, pall_mall).
same_place(cat, blends).

same_place(blends, water).
same_place(dunhill, milk).
same_place(prince, german).
same_place(beer, blue_master).same_place(2, water).
same_place(4, tea).
same_place(3, milk).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:49] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

right(blends, cat).

right(dunhill, horse).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:49] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:49] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	prolog
type(house, V) :- house(V).
house(1..5).

living_place(house, V) :- house(V).

color(Yellow). color(Green). color(White). color(Red). color(Blue).
person(brittish; danish; german; norwegian; swedish).
pet(Dog). pet(Fish). pet(Bird). pet(Horse). pet(Cat).

drink(Beer). drink(Coffee). drink(Tea). drink(Milk). drink(Water).
tobacco_brand(Blends). tobacco_brand(Blue_Master). tobacco_brand(Dunhill). tobacco_brand(Pall_Mall). tobacco_brand(Prince).

same_place(brittish, Red).
same_place(swedish, Dog).
same_place(danish, Tea).

left(Green, White).
living_place(house, V) :- house(V). same_place(V, Coffee).

same_place(Pall_Mall, Bird).
same_place(Yellow, Dunhill).
same_place(3, Milk).
same_place(norwegian, 1).

next_to(Blends, Cat).
next_to(Horse, Dunhill).
same_place(Blue_Master, Beer).
same_place(german, Prince).

next_to(norwegian, Blue).

next_to(Blends, Water).


Please let me know if this is correct.
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [13:49] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [13:49] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

next_to(green, white).
same_place(green, coffee).

same_place(pall_mall, bird).
same_place(yellow, dunhill).

same_place(3, milk).
same_place(norwegian, 1).

next_to(blends, cat).
next_to(dunhill, horse).

same_place(blue_master, beer).
same_place(german, prince).

next_to(norwegian, blue).
next_to(blends, water).
# Answer set resuelto: 
	has(brittish,house,3). has(brittish,color,red). has(brittish,pet,bird). has(brittish,drink,milk). has(brittish,tobacco_brand,pall_mall). has(danish,house,2). has(danish,color,blue). has(danish,pet,horse). has(danish,drink,tea). has(danish,tobacco_brand,blends). has(german,house,5). has(german,color,green). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,house,1). has(norwegian,color,yellow). has(norwegian,pet,cat). has(norwegian,drink,water). has(norwegian,tobacco_brand,dunhill). has(swedish,house,4). has(swedish,color,white). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output:

The British person lives in the third house, it's coloured red, has a bird as a pet, drinks milk and prefers Pall Mall tobacco. The Danish person lives in the second house, which is blue, has a horse, drinks tea and prefers Blends tobacco. The German lives in the fifth house, it's green, has a fish, drinks coffee and prefers Prince tobacco. The Norwegian person lives in the first house, it's yellow, has a cat, drinks water and prefers Dunhill tobacco.
# M�dulo gr�fico: OK

############ [14:41] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [14:41] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(norwegian, blue).
next_to(blends, cat).
next_to(dunhill, horse).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue_master).
next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [14:41] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

right(blends, cat).

right(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

right(norwegian, blue).

next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [14:41] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(yellow; green; white; red; blue).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

next_to(blends, water).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [14:41] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

person(brittish; danish; german; norwegian; swedish).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

living_place(house, V). color(V). drink(Coffee). drink(Coffee) :- house(V). color(V). house_color(V).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	Ha habido un problema en el proceso de grounding ASP

############ [14:48] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
next_to(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(dunhill, horse).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).
# Answer set resuelto: 
	has(brittish,house,3). has(brittish,color,red). has(brittish,pet,bird). has(brittish,drink,milk). has(brittish,tobacco_brand,pall_mall). has(danish,house,2). has(danish,color,blue). has(danish,pet,horse). has(danish,drink,tea). has(danish,tobacco_brand,blends). has(german,house,5). has(german,color,green). has(german,pet,fish). has(german,drink,coffee). has(german,tobacco_brand,prince). has(norwegian,house,1). has(norwegian,color,yellow). has(norwegian,pet,cat). has(norwegian,drink,water). has(norwegian,tobacco_brand,dunhill). has(swedish,house,4). has(swedish,color,white). has(swedish,pet,dog). has(swedish,drink,beer). has(swedish,tobacco_brand,blue_master).
# Explicaci�n LN: Here is the output:

The British person lives in the red house, has a bird as a pet, drinks milk and smokes Pall Mall. The Danish person lives in the blue house, has a horse as a pet, drinks tea and smokes Blends. The German person lives in the green house, has a fish as a pet, drinks coffee and smokes Prince. The Norwegian person lives in the yellow house, has a cat as a pet, drinks water and smokes Dunhill. The Swedish person lives in the white house, has a dog as a pet, drinks beer and smokes Blue Master.
# M�dulo gr�fico: OK

############ [15:9] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

drink(coffee, green).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:9] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; white; yellow; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:9] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish). 

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(red). color(yellow). color(green). color(white). color(blue).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(norwegian, blue). same_place(blends, cat). same_place(blends, water).

image(image_name, "").
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:9] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V). same_place(brittish, red). same_place(swedish, dog).

same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill).

same_place(3, milk). same_place(norwegian, 1). same_place(1, norwegian).

next_to(blends, cat). next_to(horse, dunhill). next_to(blue_master, beer). next_to(prince, german).

next_to(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,2). has(brittish,pet,horse). has(brittish,drink,beer). has(brittish,tobacco_brand,blends). has(danish,color,blue). has(danish,house,5). has(danish,pet,bird). has(danish,drink,tea). has(danish,tobacco_brand,pall_mall). has(german,color,yellow). has(german,house,3). has(german,pet,cat). has(german,drink,milk). has(german,tobacco_brand,dunhill). has(norwegian,color,white). has(norwegian,house,1). has(norwegian,pet,fish). has(norwegian,drink,water). has(norwegian,tobacco_brand,blue_master). has(swedish,color,green). has(swedish,house,4). has(swedish,pet,dog). has(swedish,drink,coffee). has(swedish,tobacco_brand,prince).
# Explicaci�n LN: Here is the output:

The British person lives in the second house, has a horse, drinks beer, and smokes blends. The Danish person lives in the fifth house, has a bird, drinks tea, and smokes Pall Mall. The German person lives in the third house, has a cat, drinks milk, and smokes Dunhill. The Norwegian person lives in the first house, has a fish, drinks water, and smokes Blue Master. The Swedish person lives in the fourth house, has a dog, drinks coffee, and smokes Prince.
# M�dulo gr�fico: OK

############ [15:25] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

left(blends, cat).

right(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

right(blends, water).
# Answer set resuelto: 
	has(brittish,color,red). has(brittish,house,5). has(brittish,pet,horse). has(brittish,drink,beer). has(brittish,tobacco_brand,blue_master). has(danish,color,yellow). has(danish,house,4). has(danish,pet,fish). has(danish,drink,tea). has(danish,tobacco_brand,dunhill). has(german,color,white). has(german,house,3). has(german,pet,cat). has(german,drink,milk). has(german,tobacco_brand,prince). has(norwegian,color,blue). has(norwegian,house,1). has(norwegian,pet,bird). has(norwegian,drink,water). has(norwegian,tobacco_brand,pall_mall). has(swedish,color,green). has(swedish,house,2). has(swedish,pet,dog). has(swedish,drink,coffee). has(swedish,tobacco_brand,blends).
# Explicaci�n LN: Here is the output:

The British person lives in the 5th house, has a horse, drinks beer, and smokes Blue Master. The Danish person's house is yellow, has a fish, drinks tea, and smokes Dunhill. The German's house is white, has a cat, drinks milk, and smokes Prince. The Norwegian lives in the first house, has a bird, drinks water, and smokes Pall Mall.
# M�dulo gr�fico: OK

############ [15:24] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; white; yellow; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:24] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color("red"; "green"; "white"; "yellow"; "blue").
type(house, V) :- house(V). house(1..5).
living_place(house, V) :- house(V).
person("brittish"; "danish"; "german"; "norwegian"; "swedish").
type(drink, V) :- drink(V). drink("beer"; "coffee"; "tea"; "milk"; "water").
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand("blends"; "blue_master"; "dunhill"; "pall_mall"; "prince").

same_place("brittish", "red").
same_place("swedish", "dog").
same_place("danish", "tea").
left("green", "white").
same_place("green", "coffee").
same_place("pall_mall", "bird").
same_place("yellow", "dunhill").
same_place(3, "milk").
same_place("norwegian", 1).
same_place("norwegian", "blue").
next_to("blends", "cat").
next_to("horse", "dunhill").
same_place("blue_master", "beer").
same_place("german", "prince").
next_to("blends", "water").
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:24] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; white; yellow; blue).
type(house, V) :- house(V). house(1..5).
living_place(house, V) :- house(V).
person(brittish; danish; german; norwegian; swedish).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
same_place(norwegian, blue).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(blends, water).
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:24] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color("red"; "green"; "white"; "yellow"; "blue").
type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).
person(brittish; danish; german; norwegian; swedish).
type(drink, V) :- drink(V). drink("beer"; "coffee"; "tea"; "milk"; "water").
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand("blends"; "blue_master"; "dunhill"; "pall_mall"; "prince").

same_place(brittish, "red").
same_place(swedish, "dog").
same_place(danish, "tea").
left("green", "white").
same_place("green", "coffee").
same_place("pall_mall", "bird").
same_place("yellow", "dunhill").
same_place(3, "milk").
same_place(norwegian, 1).
same_place(norwegian, "blue").
next_to("blends", "cat").
next_to("horse", "dunhill").
same_place("blue_master", "beer").
same_place(german, "prince").
next_to("blends", "water").
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:24] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; white; yellow; blue).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(blends, water).

same_place(1, german).

same_place(2, blue).

same_place(3, milk).

same_place(4, beer).

same_place(5, pall_mall).

image(john, "john_image").

image(africa_flag, "africa_flag").

image(italia_flag, "italia_flag").

image(romania_flag, "romania_flag").

image(milk_image, "milk_image").

image(possum, "https://www.cbc.ca/natureofthings/content/legacy/NCC_Opossums3_1920.jpg").

image(dunhill, "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Cigarette_DS.jpg/640px-Cigarette_DS.jpg").
# Answer set resuelto: 
	El programa que he inferido en base a tu mensaje no es resoluble. Aseg�rate de escribir todas las variables del sistema, aunque no est�n relacionadas con ning�n elemento.

############ [15:32] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).

############ [15:32] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). 

person(brittish; danish; german; norwegian; swedish).

type(house, V) :- house(V). house(1..5).

living_place(house, V) :- house(V).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(2, coffee). same_place(3, milk). same_place(norwegian, 1). same_place(4, dunhill). same_place(blends, cat). same_place(horse, dunhill). same_place(blends, water).

image(horse, "_"). image(dog, "_"). image(cat, "_"). image(bird, "_").

right(blends, cat). left(green, white). left(blends, water). right(blends, beer). right(blue_master, beer). left(prince, german). right(norwegian, blue).

############ [15:32] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V). person(brittish; danish; german; norwegian; swedish). type(color, V) :- color(V). color(yellow; green; white; red; blue). same_place(brittish, red). same_place(swedish, dog). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). same_place(swedish, dog). same_place(danish, tea). next_to(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(dunhill, horse). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). next_to(blends, water).

############ [15:32] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V).
house(1..5).

color(V) :- color(V).
color(V). color(white; yellow; green; red; blue).

person(brittish; danish; german; norwegian; swedish).

pet(V) :- pet(V).
pet(V). pet(dog; fish; bird; horse; cat).

drink(V) :- drink(V).
drink(V). drink(beer; coffee; tea; milk; water).

tobacco_brand(V) :- tobacco_brand(V).
tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(1, norwegian).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).

############ [15:32] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(house, V) :- house(V). house(1..5).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

right(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: Here is the output:

The British person lives in the house with the number 5 and has a blue color. He also has a cat as a pet, drinks water, and smokes Pall Mall tobacco. The Danish person resides in the yellow house number 3, has a horse as a pet, drinks milk, and prefers Dunhill tobacco. The German lives in the white-colored house number 2, has a bird as a pet, drinks tea, and smokes Blue Master tobacco. The Norwegian lives in the house with the number 4, has a dog as a pet, drinks coffee, and smokes Blends tobacco. The Swedish dweller resides in the red-colored house with the number 1, has a fish as a pet, drinks beer, and enjoys Prince tobacco.
# M�dulo gr�fico: OK

############ [15:57] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [15:57] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: socket hang up

############ [15:57] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(3, blue).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: Here is the output:

The British person lives in the third house with a red color, keeps a bird as a pet, drinks milk, and smokes Pall Mall tobacco. The Danish person lives in the second house with a blue color, keeps a horse as a pet, drinks tea, and smokes blends tobacco. The German person lives in the fourth house with a green color, keeps a fish as a pet, drinks coffee, and smokes Prince tobacco. The Norwegian person lives in the first house with a yellow color, keeps a cat as a pet, drinks water, and smokes Dunhill tobacco. The Swedish person lives in the fifth house with a white color, keeps a dog as a pet, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [16:7] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [16:7] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [16:7] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [16:7] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [16:7] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error en el servidor del LLM: Request failed with status code 400

############ [16:9] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(norwegian, blue).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

Let me know if this meets the requirements!.

############ [16:9] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
living_place(house, V). drink(coffee) :- house(V).
same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [16:9] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
left(green, coffee).

same_place(pall_mall, bird).
same_place(dunhill, yellow).

same_place(milk, 3).

same_place(norwegian, 1).

next_to(blends, cat).
next_to(horse, dunhill).

same_place(blue_master, beer).
same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).

############ [16:9] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(house, V) :- house(V). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(color, V) :- color(V). color(yellow; green; white; red; blue).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
same_place(green, coffee).

same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).

same_place(norwegian, 1).
same_place(blends, cat).
next_to(blends, cat).
next_to(dunhill, horse).

same_place(blue_master, beer).
same_place(german, prince).

next_to(norwegian, blue).
same_place(blends, water).

############ [16:9] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(yellow; green; white; red; blue).

type(house, V) :- house(V).
house(1..5).
living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
left(green, coffee).

same_place(pall_mall, bird).
same_place(yellow, dunhill).

same_place(3, milk).
same_place(norwegian, 1).

next_to(blends, cat).
next_to(horse, dunhill).

same_place(blue_master, beer).
same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: Here is the output:

The British person lives in the house with the number 3, keeps a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the house with the number 2, keeps a horse as pet, drinks tea and smokes Blends tobacco. The German person lives in the house with the number 5, keeps a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the house with the number 1, keeps a cat as pet, drinks water and smokes Dunhill tobacco.
# M�dulo gr�fico: OK

############ [16:37] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(norwegian, blue). next_to(blends, cat). next_to(dunhill, horse). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [16:37] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5). living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

next_to(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: The British person lives in the red house number 3, keeps a bird as a pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the blue house number 2, has a horse, drinks tea, and smokes Blends tobacco. The German person lives in the green house number 5, has a fish, drinks coffee, and smokes Prince tobacco. The Norwegian person lives in the yellow house number 1, has a cat, drinks water, and smokes Dunhill tobacco. The Swedish person lives in the white house number 4, has a dog, drinks beer, and smokes Blue Master tobacco.
# M�dulo gr�fico: OK

############ [16:39] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).
living_place(house, V) :- house(V).

same_place(brittish, red).
same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

right(blends, cat).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: Here is the output:

The British person lives in the red house #3, drinks milk, keeps a bird as pet and smokes Pall Mall tobacco. The Danish person lives in the blue house #2, keeps a horse as pet, drinks tea and smokes Blends tobacco. The German person lives in the green house #4, keeps a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the yellow house #1, keeps a cat as pet, drinks water and smokes Dunhill tobacco.
# M�dulo gr�fico: OK

############ [16:46] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

color(red; purple). same_place(spanish, red). same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:46] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	person(spanish; english; chinese).

type(boat, V) :- boat(V).
boat(red; purple).

type(drink, V) :- drink(V).
drink(tea; milk; soda).

image(soda, "cocacola").

type(pet, V) :- pet(V).
pet(dog; cat; horse).

image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

living_place(boat, V) :- boat(V).
living_place(person, V) :- person(V).

same_place(spanish, soda).
same_place(spanish, red).
same_place(chinese, purple).
next_to(spanish, english).
next_to(chinese, english).

same_place(spanish, cat).
same_place(english, dog).
same_place(spanish, horse).

image(red, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:46] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V).
boat(1..3).

person(spanish; english; chinese).
drink(tea; milk; soda).

image(drink, V) :- drink(V).
image(soda, "cocacola").

pet(dog; cat; horse).

image(pet, V) :- pet(V).
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").
image(horse, "horse").

color(V) :- color(V).
color(red; purple).

living_place(boat, V) :- boat(V).
same_place(spanish, 1, red).
same_place(chinese, 2, purple).
# Explicaci�n LN: The English lives on boat number 2.

############ [16:50] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(red; purple).

type(boat, V) :- boat(V).
boat(red). boat(purple).
image(red, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

person(spanish; english; chinese).

type(drink, V) :- drink(V).
drink(tea; milk; soda).
same_place(spanish, soda).
image(soda, "cocacola").

type(pet, V) :- pet(V).
pet(dog; cat; horse).
same_place(spanish, cat).
same_place(english, dog).
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

############ [16:50] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

boat(1..3).

living_place(boat, V) :- boat(V).

person(spanish; english; chinese).

type(pet, V) :- pet(V). pet(dog; cat; horse).

image(dog, "" .
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

image(horse, "horse").

drink(tea; milk; soda).

same_place(soda, "cocacola").

same_place(spanish, red).

same_place(chinese, purple).

same_place(spanish, cat).

same_place(english, dog).

next_to(spanish, english).

next_to(english, chinese).

same_place(spanish, soda).

same_place(spanish, red).

same_place(chinese, purple).

same_place(horse, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:50] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, spanish).

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(dog, english). same_place(cat, spanish). same_place(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

image(horse, "horse").

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

same_place(spanish, 1). same_place(english, dog). same_place(chinese, 3).

color(boat, V) :- color(V). color(red). same_place(spanish, red). color(purple). same_place(chinese, purple).

############ [16:50] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V).
boat(1..3).
living_place(boat, V) :- boat(V).
person(spanish; english; chinese).
type(drink, V) :- drink(V).
drink(tea; milk; soda).
same_place(soda, "cocacola").
pet(dog; cat; horse).

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").
image(horse, "horse").

color(red; purple).
same_place(spanish, red).
same_place(chinese, purple).

living_place(spanish, 1).
living_place(chinese, 3).

############ [16:50] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

person(spanish; english; chinese).

boat(1..3). living_place(boat, V) :- boat(V). 

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(dog, english). same_place(cat, spanish). same_place(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

same_place(english, dog). same_place(spanish, cat). same_place(spanish, red). same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:54] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

type(drink, V) :- drink(V). drink(tea; milk; soda).

person(spanish; english; chinese).

boat(1..3).

living_place(boat, V) :- boat(V).

type(pet, V) :- pet(V). pet(dog; cat; horse).

image(dog, "_").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

image(horse, "horse").

same_place(spanish, soda). image(soda, "cocacola").

same_place(english, dog).

same_place(spanish, cat).

same_place(spanish, red).

same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

next_to(spanish, english).

next_to(english, chinese).

same_place(spanish, soda).

same_place(english, dog).

same_place(chinese, purple).

############ [16:54] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

boat(1..3). living_place(boat, V) :- boat(V).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(spanish, cat). same_place(english, dog). same_place(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

same_place(spanish, red). same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:54] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(english, dog). same_place(spanish, cat). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse"). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:54] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(red; purple).

boat(1..3).
living_place(boat, V) :- boat(V).
person(spanish; english; chinese).
drink(tea; milk; soda).
same_place(soda, "cocacola").

type(pet, V) :- pet(V).
pet(dog; cat; horse).
same_place(dog, english).
same_place(cat, spanish).
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

same_place(spanish, red).
same_place(chinese, purple).
image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [16:54] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

person(spanish; english; chinese).

boat(1..3). living_place(boat, V) :- boat(V). 

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse").

type(color, V) :- color(V). color(red; purple). 

same_place(spanish, red). same_place(chinese, purple).

same_place(spanish, soda). same_place(soda, spanish). 

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [17:28] LOG ############:

### Intento 0 de 4  ###

############ [17:45] LOG ############:

### Intento 0 de 4  ###

############ [18:46] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).
living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).

same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(dunhill, horse).

next_to(blue_master, beer).
same_place(prince, german).
next_to(norwegian, blue).
next_to(blends, water).
# Explicaci�n LN: Here is the final output:

The British person lives in the house with number 3, having a red color, keeping a bird as pet, drinking milk, and smoking Pall Mall tobacco. The Danish person lives in the house with number 2, having a blue color, owning a horse, drinking tea, and smoking Blue Master tobacco. The German person lives in the house with number 5, having a white color, owning a cat, drinking water, and smoking Prince tobacco. The Norwegian person lives in the house with number 1, having a yellow color, owning a fish, drinking beer, and smoking Dunhill tobacco. Finally, there is no information about the Swedish person.

############ [18:53] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	person(spanish; english; chinese).

type(drink, V) :- drink(V).
drink(tea; milk; soda).

type(image, V) :- image(V).
image("https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg", cat).
image("horse").

boat(1..3).

living_place(boat, V) :- boat(V).
same_place(spanish, 1).
color(red).
same_place(spanish, red).

type(color, V) :- color(V).
color(red; purple).

image("https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg", purple).
same_place(chinese, 3).

same_place(spanish, soda).
image("cocacola", soda).
type(pet, V) :- pet(V).
pet(cat; dog; horse).
same_place(spanish, cat).
same_place(english, dog).
same_place(chinese, horse).

############ [18:53] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(drink, V) :- drink(V). drink(tea; milk; soda). image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse").

person(spanish; english; chinese).

house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; purple).

same_place(spanish, soda). same_place(spanish, cat). same_place(spanish, red). same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg"). same_place(chinese, boat).

############ [18:53] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

boat(1..3). living_place(boat, V) :- boat(V).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(spanish, cat). same_place(english, dog). same_place(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse").

same_place(spanish, red). same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [18:53] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V).
boat(1..3).
living_place(boat, V) :- boat(V).
person(spanish; english; chinese).
type(drink, V) :- drink(V).
drink(tea; milk; soda).
same_place(spanish, soda).
image(soda, "cocacola").
type(pet, V) :- pet(V).
pet(dog; cat; horse).
same_place(spanish, cat).
same_place(english, dog).
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").
type(color, V) :- color(V).
color(red; purple).
same_place(spanish, red).
same_place(chinese, purple).
image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [18:53] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda).

image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(cat, spanish).

same_place(dog, english).

image(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

type(color, V) :- color(V). color(red; purple).

same_place(spanish, red).

same_place(chinese, purple).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [18:58] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3).

 person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda).

image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(spanish, cat).

same_place(english, dog).

image(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

same_place(spanish, red).

same_place(chinese, purple).

### This is the end of the processing.

############ [18:58] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). same_place(red, 1). same_place(purple, 3).

person(spanish; english; chinese). living_place(house, V) :- house(V). house(1..3).

type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). same_place(horse, "horse"). same_place(cat, spanish).

same_place(spanish, 1). same_place(spanish, red). same_place(spanish, cat).

same_place(english, 2). same_place(english, dog).

same_place(chinese, 3). same_place(chinese, purple).

############ [18:58] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V).

person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse").

color(red; purple). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [18:58] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). boat(1). same_place(spanish, 1). boat(3). same_place(chinese, 3). boat(2). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg"). same_place(spanish, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [18:58] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(drink, V) :- drink(V). drink(tea; milk; soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, soda). same_place(spanish, cat). same_place(english, dog). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse"). same_place(spanish, red). type(color, V) :- color(V). color(red; purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg"). person(spanish; english; chinese). same_place(spanish, red). same_place(chinese, purple).

############ [1:6] LOG ############:

### Intento 0 de 4  ###

############ [1:14] LOG ############:

### Intento 0 de 4  ###

############ [1:21] LOG ############:

### Intento 0 de 4  ###

############ [1:26] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V).

person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [1:26] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").
# Explicaci�n LN: The Spanish person has a boat with number 3, drinks soda, has a cat as pet and his house is painted red. The English person has a boat with number 1, drinks milk and has a dog. The Chinese person has a boat with number 2, drinks tea and keeps a horse, and his house is painted purple.

############ [1:28] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

building(1..3). living_place(building, V) :- building(V).
person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place/english, dog/. same_place(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). same_place(horse, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [1:28] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; purple).

building(1..3). living_place(building, V) :- building(V).

person(spanish; english; chinese).

type(drink, V) :- drink(V). drink(tea; milk; soda).

same_place(spanish, soda).

image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).

same_place(spanish, cat). same_place(english, dog). same_place(horse, "horse").

image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

image(horse, "horse").

type(color, V) :- color(V). color(red). same_place(red, spanish).

living_place(building, V) :- building(V). same_place(chinese, purple).

image(building, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [1:28] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). living_place(boat, V) :- boat(V). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").
# Explicaci�n LN: The Spanish person owns the boat numbered 3, drinks soda, and has a cat as a pet. The boat is also coloured red.

############ [16:5] LOG ############:

### Intento 0 de 4  ###

############ [16:7] LOG ############:

### Intento 0 de 4  ###

############ [17:30] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, purple). same_place(spanish, dog). same_place(chinese, tea). same_place(spanish, ducados).
# Explicaci�n LN: Here is the final output:

The Spanish person lives in the house with the number 1, drinks water, eats sandwiches, and smokes Ducados cigarettes, while his house is coloured blue. The house at number 2 belongs to the English person who drives a red car, has a dog, drinks coffee, keeps a pet duck, and prefers Blue Master tobacco. The Chinese person resides in the purple house with the number 1, is fond of Camels cigarettes, enjoys tea, and owns a cat.
# M�dulo gr�fico: ['Traceback (most recent call last):\n', '  File "C:\\Users\\Pedro_fyktqtb\\Desktop\\TFG_repo\\ASP-Puzzle-Solver\\ASP-Puzzle-Solver\\src\\py\\einstein_grafico.py", line 376, in einstein_grafico\n    representa_estado_inicial(elemento_central, grupos, rutas_imagenes).save(tmp_path + "/estado_inicial.png")\n', '  File "C:\\Users\\Pedro_fyktqtb\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\PIL\\Image.py", line 2456, in save\n    fp = builtins.open(filename, "w+b")\n', "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\Pedro_fyktqtb\\\\Desktop\\\\TFG_repo\\\\ASP-Puzzle-Solver\\\\ASP-Puzzle-Solver\\\\resources\\\\tmp\\\\estado_inicial.png'\n"]

############ [17:30] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, dog). same_place(chinese, tea). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). same_place(spanish, ducados).

############ [17:30] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, red). same_place(english, blue). same_place(chinese, purple). same_place(spanish, dog). same_place(chinese, tea). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados). same_place(spanish, ducados).

############ [17:30] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). 
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, dog). same_place(chinese, tea). same_place(spanish, ducados). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, purple).

Let me know if this is correct!.

############ [17:30] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, purple). same_place(spanish, dog). same_place(chinese, tea). same_place(spanish, ducados).
# Explicaci�n LN: Here is the output:

The Spanish person lives in the house number 3, has the house painted red, has a dog as a pet, and smokes Ducados tobacco. They also drink water. The English person lives in the house number 2, has the house painted blue, has a duck as a pet, and smokes Blue Master tobacco. They also drink coffee. The Chinese person lives in the house number 1, has the house painted purple, has a cat as a pet, and smokes Camel tobacco. They also drink tea.
# M�dulo gr�fico: ['Traceback (most recent call last):\n', '  File "C:\\Users\\Pedro_fyktqtb\\Desktop\\TFG_repo\\ASP-Puzzle-Solver\\ASP-Puzzle-Solver\\src\\py\\einstein_grafico.py", line 376, in einstein_grafico\n    representa_estado_inicial(elemento_central, grupos, rutas_imagenes).save(tmp_path + "/estado_inicial.png")\n', '  File "C:\\Users\\Pedro_fyktqtb\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\PIL\\Image.py", line 2456, in save\n    fp = builtins.open(filename, "w+b")\n', "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\Pedro_fyktqtb\\\\Desktop\\\\TFG_repo\\\\ASP-Puzzle-Solver\\\\ASP-Puzzle-Solver\\\\resources\\\\tmp\\\\estado_inicial.png'\n"]

############ [17:43] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).

house(1..3).

person(spanish; english; chinese).

type(pet, V) :- pet(V). pet(dog; cat; duck).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master).

type(drink, V) :- drink(V). drink(coffee; water; tea).

same_place(chinese, tea).

same_place(duck, purple).

same_place(spanish, red).

same_place(english, blue).

############ [17:43] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

Let me know if this meets your requirements!.

############ [17:43] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). 

Please let me know if this is correct!.

############ [17:43] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place/english, blue). same_place(chinese, tea). type(pet, V) :- pet(V). pet(duck). same_place(duck, purple). 

Let me know if this meets your requirements!.

############ [17:43] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). 
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).
# Explicaci�n LN: Here is the output:

The Spanish person lives in the third house with a red color, owns a cat, smokes Camel tobacco, drinks water. The English person lives in the second house with a blue color, has a dog, smokes Ducados tobacco and drinks Coffee. The Chinese person lives in the first house with a purple color, owns a duck and drinks Tea.

############ [20:28] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red). same_place(spanish, red). color(blue). same_place(english, blue). type(pet, V) :- pet(V). pet(duck). same_place(duck, purple). person(spanish; english; chinese). living_place(house, V) :- house(V). house(1..3). same_place(spanish, 1). same_place(english, 2). same_place(chinese, 3). same_place(chinese, tea).

############ [20:28] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(tea, chinese). same_place(duck, purple). same_place(red, spanish). same_place(blue, english).

############ [20:28] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).
# Explicaci�n LN: The Spanish person lives in the house number 3 with a red house and cat as a pet, and smokes Camel tobacco while drinking water. The English person lives in the house number 2 with a blue house, having a dog, smoking Ducados tobacco and drinking Coffee.

############ [0:6] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carlos, claude).
next_to(carlina, french).
next_to(claudia, carlos).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(carlina, french).
next_to(isabel, french).
speaks(carlina, basque).

############ [0:6] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). 
person(alberto; carlos; carolina; pacifico; lucia; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic). 
speaks(claudia, spanish). speaks(martina, german). speaks(pedro, arabic). 
not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). 
opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, pedro). 
next_to(carlos, claudia). next_to(paco, lucia). opposite(paco, lucia).

############ [0:6] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(claudia, carlos).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(carlos, claudia).
speaks(carolina, basque).

############ [0:6] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). 
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic). 
speaks(claudia, spanish). 
speaks(martina, german). 
speaks(pedro, arabic). 
not_next_to(claudia, pedro). 
next_to(pedro, arabic). 
opposite(martina, jose). 
opposite(alberto, carolina). 
next_to(isabel, pedro). 
next_to(carolina, french).
# Explicaci�n LN: Pedro is seated in the first chair, Lucia is not mentioned, Isabel is seated in the tenth chair, Jose is seated in the eighth, Paco is seated in the fifth, Alberto is not mentioned, Martina is seated in the sixth, Carolina is seated in the ninth and Claudia is not mentioned.

############ [0:31] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; pacific; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
speaks(pedro, arabic).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(carolina, french).
speaks(carolina, basque).
next_to(carlos, claude).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(isabel, pedro).
next_to(calia, french).
# Explicaci�n LN: Pedro is seated in the first chair, Lucia is seated in the 7th, Isabel in the 10th, Jose in the 8th, Alberto is not mentioned, Carolina is seated in the 9th, Martina in the 6th, Claudia is seated in the 6th, Pacific is seated in the 5th and Carlos in the 2nd.

############ [0:36] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro).

language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).
not_next_to(claudia, pedro).
next_to(paco, lucia).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(carolina, french).
not_next_to(carolina, french).
speaks(isabel, french).
next_to(isabel, pedro).
opposite(paco, lucia).
next_to(c Claudia, carlos).

############ [0:36] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, pedro). next_to(carolina, french).
# Explicaci�n LN: Pedro is seated in the first chair, Alberto is not seated (he's missing), Carlos is seated in the second, Lucia is not seated (she's missing), Isabel is not seated (she's missing), Jose is seated in the eighth, Martina is seated in the third, Carolina is not seated (she's missing), Claudia is seated in the sixth and Paco is seated in the fifth.

############ [0:44] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:44] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). speaks(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:44] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the translation:

seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabella, pedro). opposite(paco, lucia). next_to(claudia, carlos). next_to(carolina, french).

############ [0:44] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). 
person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic). 
speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). 
not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). 
speaks(carolina, basque). next_to(isabel, french). not_next_to(carlos, arabic). 

Please let me know if I got it correct!.

############ [0:44] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(carolina, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(isabel, pedro).
speaks(isabel, french).

############ [0:52] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, pedro). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:52] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, french). next_to(carolina, french). next_to(caro.

############ [0:52] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(carolina, french).
speaks(carolina, basque).
# Explicaci�n LN: Lucia is seated in the first chair, Martina in the second, Alberto is not present as he was in the previous iteration. Isabel is seated in the third, Carolina is seated in the ninth, Paco is seated in the sixth, Claudia is seated in the fifth, Jose is seated in the seventh and Carlos is seated in the tenth.

############ [1:3] LOG ############:

### Intento 0 de 4  ###

############ [1:3] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, pedro).
next_to(carolina, french).
next_to(carla, french).
# Explicaci�n LN: Pedro is seated in the first chair, Claudia in the sixth one, Carolina in the ninth, Lucia in the seventh, Isabel in the tenth, Martina in the third, Alberto in the fourth one, Paco in the fifth, Carlos in the second and Jose in the eight.

############ [1:6] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, french). next_to(carlos, claudia). next_to(carlos, claude). opposite(paco, lucia). next_to(carolina, french).

############ [1:6] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(carolina, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos).

############ [1:6] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, french). next_to(carolina, french). next_to(claudia, carlos).

############ [1:6] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
speaks(carolina, basque).
next_to(isabel, french).
next_to(paco, lucia).
opposite(paco, lucia).
next_to(claudia, carlos).
next_to(carlos, carolina).

############ [1:6] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, joe). opposite(alberto, carolina). next_to(isabel, pedro). next_to(carloda, clauida). next_to(carolina, french). speaks(carolina, basque).
# Explicaci�n LN: Paco is seated in the first chair, Lucia in the second one, Alberto has not participated yet, Carlos is seated in the third one, Manolo has not participated yet, Claudia is seated in the fifth one, Pedro is seated in the seventh and Martina is seated in the tenth while Carolina and Isabel have not shown up yet and nor has Jose.

############ [1:11] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(carolina, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos).

############ [1:11] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(claudia, spanish).
speaks(martina, german).
speaks(pedro, arabic).
speaks(jose, arabic).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
speaks(carolina, basque).
next_to(carolina, french).
next_to(claudia, carlos).
next_to(paco, lucia).
opposite(paco, lucia).
opposite(jose, pedro).

############ [1:11] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [1:11] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(carolina, alberto). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french). next_to(carlos, claudia). opposite(paco, lucia).

############ [1:11] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(isabel, french).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(carolina, french).

############ [1:13] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10).
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro).
language(german; spanish; galician; catalan; basque; french; english; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
opposite(alberto, carolina).
next_to(claudia, carlos).
speaks(carolina, basque).
next_to(isabel, pedro).
next_to(carolina, french).
# Explicaci�n LN: Pedro is seated in the eighth place, Claudia in the fourth seat, Martina in the second, Jose is seated in the seventh seat, Isabel in the ninth, Carolina is seated in the sixteenth, Alberto in the first, Carlos is seated in the third and Paco is seated in the fifth.

############ [21:55] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

seats_number(4). person(jose; martina; claudia; pedro). language(german; spanish; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). opposite(martina, jose).

############ [21:55] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(4).
person(jose; martina; claudia; pedro).
language(german; spanish; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
# Explicaci�n LN: Pedro is seated in the first chair, Martina is seated in the second, Claudia is seated in the third, and Jose is seated in the fourth.

############ [22:10] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, french). next_to(carolina, french). next_to(claudia, carlos).
# Explicaci�n LN: Pedro is seated in the 5th, Alberta is not present, Carolina is not present, Lucia is not present, Isabel is not present, Alberto is not present, Claudia is seated in the 2nd, Jose is seated in the 9th, Martina is seated in the 4th, Paco is seated in the 6th, Carlos is seated in the 1st.

############ [22:23] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the translation:

seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, pedro). next_to(carolina, french). next_to(claudia, carlos).

############ [22:23] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	OUT: seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, pedro). next_to(carolina, french). speaks(carolina, basque).

############ [22:23] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(carolina, french).
# Explicaci�n LN: Here's my attempt to translate the final input:

Martina is seated in the first chair, Claudia in the third, Alberto not mentioned, Isabel in the eighth, Lucia in the tenth, Carlos in the second, Paco in the fifth, Pedro in the seventh.

############ [23:26] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). 
person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). 
language(german; spanish; galician; catalan; basque; french; english; arabic). 
speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(alberto, carolina). opposite(carolina, alberto). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [23:26] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). language(german; spanish; galician; catalan; basque; french; english; arabic). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). next_to(carolina, french). next_to(claudia, carlos). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia).
# Explicaci�n LN: Isabel is seated in the first chair, Pedro is seated in the second one, Paco is seated in the third one, Martina is seated in the fourth, Claudia is seated in the sixth and Alberto is seated in the seventh, Carolina is seated in the tenth, Jose is seated in the ninth.

############ [0:7] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, pedro). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:7] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, french). next_to(isabel, pedro). next_to(carlos, claudia).

############ [0:7] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french).

############ [0:7] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the translation:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(alberto, carolina). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french). speaks(carolina, basque).

############ [0:7] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). next_to(pedro, arabic). not_next_to(claudia, pedro). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french). speaks(carolina, basque).

############ [0:9] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). speaks(pedro, arabic). next_to(martina, jose). opposite(martina, jose). next_to(carolina, french). speaks(carolina, basque). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos). speaks(paco, arabic).

############ [0:9] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(alberto, carolina). opposite(carolina, alberto). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(carolina, french).

############ [0:9] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(claudia, spanish). speaks(martina, german). not_next_to(pedro, claudia). next_to(pedro, arabic). opposite(martina, jose). next_to(carolina, french). opposite(carolina, french). next_to(carolina, french). speaks(carolina, basque). next_to(alberto, carolina). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(paco, lucia). opposite(paco, lucia). speaks(carlos, carolina). next_to(carlos, claudia).

############ [0:9] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(claudia, spanish). speaks(martina, german). speaks(pedro, arabic). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(carolina, french). next_to(carlos, claudeia). opposite(alberto, carolina). speaks(carolina, basque). speaks(isabel, french). next_to(paco, lucia). opposite(paco, lucia). speaks(carolina, french).

############ [0:9] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(paco, lucia). opposite(paco, lucia). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:12] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french). speaks(carolina, basque).

############ [0:12] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(martina, jose). opposite(martina, jose). next_to(pedro, arabic). opposite(carolina, alberto). speaks(carolina, basque). next_to(isabel, french). next_to(carolina, french).

############ [0:12] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the answer:

languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(carolina, french). next_to(carolina, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos).

############ [0:12] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(carolina, basque). speaks(isabel, french). next_to(isabel, pedro). opposite(paco, lucia). next_to(claudia, carlos).

############ [0:12] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	languages(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). speaks(carolina, basque). next_to(carolina, french).

############ [0:20] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

language(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). next_to(carolina, french). next_to(carlos, carolina). next_to(claudia, carlos). opposite(alberto, carolina). speaks(carolina, basque). next_to(isabel, pedro). next_to(paco, lucia). opposite(paco, lucia).

############ [0:20] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	language(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). next_to(pedro, arabic). not_next_to(claudia, pedro). speaks(pedro, arabic). next_to(martina, jose). opposite(martina, jose). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:20] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

language(spanish; german; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(carolina, alberto). next_to(isabel, pedro). next_to(paco, lucia). next_to(carlos, claudia). speaks(carolina, basque). speaks(carolina, french).

############ [0:20] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	language(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). next_to(isabel, pedro). next_to(paco, opposite(lucia)). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).

############ [0:20] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	language(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(carolina, french). speaks(carolina, basque).
# Explicaci�n LN: Here's the output:

Teresa is seated in the first chair, Alberto, Carlos, Carolina are not mentioned, Paco in the second, Josè is absent, Manolo is not here, Abel, Jose, Martina are not sitting, Claudia is missing, Lucia and Isabel are not there and Pedro in the eighth place.

############ [23:49] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5). living_place(house, V) :- house(V).
person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
next_to(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).
# Explicaci�n LN: The British person lives in the third house with a red color, keeps a fish as pet, drinks milk and smokes Pall Mall. The Danish person lives in the second house with a blue color, owns a horse as pet, drinks tea and prefers Blend cigarettes. The German lives in the fourth house with a green color, takes care of a bird as pet, drinks coffee and smokes Prince. The Norwegian person resides in the first house with a yellow color, has a cat as pet, drinks water and enjoys Dunhill cigarettes. Lastly, the Swedish individual inhabits the fifth house with a white color, keeps a dog as pet, drinks beer and smokes Blue Master.

############ [0:9] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	house(1..20).

living_place(house, V) :- house(V).

person(dominican; nicaraguan; british; irish; norwegian; spanish; portuguese; chilean; peruvian; ecuadorian; italian; german; belgian; swedish; swiss; greek; russian; ukranian; palestinian; french).

type(color, V) :- color(V). color(black; blue; purple; magenta; navy; yellow; ocre; white; maroon; ivory; lime; cyan; rose; pink; grey; green; brown; violet; olive; mustard).
# Explicaci�n LN: The Portuguese live in the first house. The Spanish person lives in the second house. Peruvian people reside in the third house. The Dominican live in the fourth house. The Belgian inhabit the fifth house. Norwegians live in the sixth house. Nicaraguans dwell in the seventh house. Ukrainians reside in the eighth house. Swiss people live in the ninth house. Italians inhabit the tenth house. Chileans reside in the eleventh house. Irish people live in the twelfth house. British inhabitants are in the thirteenth house. French people reside in the fourteenth house. Palestinians dwell in the fifteenth house. Russians live in the sixteenth house. Greeks inhabit the seventeenth house. Swedes live in the eighteenth house. Germans reside in the nineteenth house. Ecuadorians dwell in the twentieth house. The houses of the Spanish have black color, of the Norwegian - blue, of the Irish - purple, of the British - magenta, of the Nicaraguan - navy, of the Dominican - yellow, of the French - ocre, of the Palestinian - white, of the Ukrainian - maroon, of the Russian - ivory, of the Greek - lime, of the Swiss - cyan, of the Swedish - rose, of the Belgian - pink, of the German - grey, of the Italian - green, of the Ecuadorian - brown and of the Peruvian - violet. Of the Chilean - olive.

############ [0:14] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the answer:

language(spanish; italian; german; esperanto; galician; english; brazilian; portuguese; french). seats_number(25). person(a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s; t; u; v; w; x; y). speaks(a, brazilian). speaks(d, brazilian). speaks(c, brazilian). speaks(b, spanish). speaks(t, spanish). speaks(s, spanish).

############ [0:14] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	language(spanish; italian; german; esperanto; galician; english; brazilian; portuguese; french). seats_number(25). person(a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s; t; u; v; w; x; y). speaks(a, brazilian). speaks(d, brazilian). speaks(c, brazilian). speaks(b, spanish). speaks(t, spanish). speaks(s, spanish).
# Explicaci�n LN: Y is seated in the first chair, X in the second, W in the third, V in the fourth, U in the fifth, T in the sixth, S in the seventh, R in the eighth, Q in the ninth, P in the tenth, O in the eleventh, N in the twelfth, M in the thirteenth, L is seated in the twenty-first chair, K in the fourteenth, J in the fifteenth, I in the sixteenth, H in the seventeenth, G in the eighteenth, F in the nineteenth, E in the twentieth and A in the twenty-fifth chair, and finally individual B is seated in the twenty-fourth and individuals C, D are not present in this representation.

############ [0:16] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	language(spanish; italian; german; esperanto; galician; english; brazilian; portuguese; french). seats_number(25). person(a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s; t; u; v; w; x; y). speaks(a, brazilian). speaks(d, brazilian). speaks(c, brazilian). speaks(b, spanish). speaks(t, spanish). speaks(s, spanish).
# Explicaci�n LN: Individual Y is seated in the seat number 1, X in the 2, W in the 3, V in the 4, U in the 5, T in the 6, S in the 7, R in the 8, Q in the 9, P in the 10, O in the 11, N in the 12, M in the 13, L is seated in the 21, K in the 14, J in the 15, I in the 16, H in the 17, G in the 18, F in the 19, E in the 20 and finally, A is seated in the 25 and B in the 24 and C in the 23 and D in the 22.

############ [1:28] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


house(1..5). living_place(house, V) :- house(V).
person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

color(white; green; yellow; red; blue).

############ [1:28] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1). living_place(house, V) :- house(V). same_place(1, norwegian).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

next_to(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

next_to(blends, cat).

next_to(dunhill, horse).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

same_place(blends, water).

Let me know if this is what you were looking for!.

############ [1:28] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5). living_place(house, V) :- house(V). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, water). left(blends, cat). left(blends, water).

############ [1:28] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: The British person lives in the third house with a red colour, has a bird as a pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the second house with a blue colour, has a horse as a pet, drinks tea and prefers Blend tobacco. The German person resides in the fourth house with a green colour, has a fish as a pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the first house with a yellow colour, keeps a cat as pet, drinks water and enjoys Dunhill tobacco. Lastly, the Swedish person resides in the fifth house with a white colour, has a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [17:27] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	person(brittish; danish; german; norwegian; swedish).
house(1..5).
living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).
color(yellow; green; white; red; blue).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [17:27] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). same_place(brittish, red). same_place(swedish, dog). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). same_place(danish, tea). same_place(green, coffee). same_place(3, milk). same_place(norwegian, 1). same_place(blue, prince). same_place(blends, cat). same_place(horse, dunhill). same_place(blue_master, beer). same_place(prince, german).

############ [17:27] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).

person(brittish). same_place(brittish, red).

person(swedish). same_place(swedish, dog).

person(danish). same_place(danish, tea).

living_place(house, V) :- house(V). same_place(2, coffee).

living_place(house, V) :- house(V). same_place(3, milk).

person(norwegian). same_place(norwegian, 1).

person(german). same_place(german, prince).

next_to(blends, cat).

next_to(horse, dunhill).

next_to(blue_master, beer).

next_to(swedish, blue).

next_to(norwegian, blue).

same_place(blends, water).
# Explicaci�n LN: The British person lives in the fourth house with a red color, has a horse as a pet, drinks beer and smokes Pall Mall tobacco. The Swedish person lives in the white house numbered 3, drinks milk, keeps a dog as a pet, and smokes Blue Master tobacco. The Danish person resides in the fifth house with a green color, has a bird as a pet, drinks tea, and smokes Dunhill tobacco. The Norwegian person lives in the yellow-colored first house, has a fish as a pet, drinks water, and smokes Blends tobacco. The German person lives in the blue-colored second house, has a cat as a pet, drinks coffee, and smokes Prince tobacco.

############ [17:31] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swedish, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

right(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).
# Explicaci�n LN: The British person lives in the house with the number 3, likes things to be red, has a bird as a pet, drinks milk and smokes Pall Mall tobacco. The Danish person resides in the second house, which is blue, and has a horse as a pet, consumes tea and uses Blue Master tobacco. The German person lives in the fifth house, which is white, keeps a cat, drinks water and prefers Prince tobacco. Lastly, the Norwegian dwells in the first house, where everything is yellow, has a fish as a pet, drinks beer and smokes Dunhill tobacco. Additionally, the Swedish person inhabits the fourth house, characterized by its green color, has a dog as a pet, consumes coffee and utilizes blends tobacco.

############ [17:34] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

############ [17:34] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

OUT: living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).

IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.

OUT: house(1..9). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog). next_to(dog, red). same_place(red, 1).

IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The german lives in the third one.

OUT: house(1..10). living_place(house, V) :- house(V). person(swedish; spanish; german). same_place(swedish, 10). same_place(spanish, 1). same_place(german, 3).

IN: There is one house, where the Brittish lives. It's painted Red. The tobacco brands are two and they are Marlboro and Dunhill. The house where the Brittish lives is the number 1. The brittish lives to the left of the person who smokes Dunhill cigarettes.

OUT: house(1). living_place(house, V) :- house(V). person(brittish). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; dunhill). same_place(brittish, 1). left(brittish, dunhill).

IN: There are two tobacco brands: Dunhill and Pall Mall. There are two drinks: Beer and Milk. The person that smokes Dunhill also drinks Beer. The Pall Mall smoker is a Milk drinker.

OUT: type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(dunhill; pall_mall). type(drink, V) :- drink(V). drink(beer; milk). same_place(dunhill, beer). same_place(pall_mall, milk).

IN: There are three houses. There is a Spanish, a German and a Brittish. The drinks are Milk, Coffee and Water. The person who lives in the house of the centre (that is, the second house) drinks Coffee. The owner of the first house drinks Milk.

OUT: house(1..3). living_place(house, V) :- house(V). person(spanish; german; brittish). type(drink, V) :- drink(V). drink(milk; coffee; water). same_place(coffee, 2). same_place(milk, 1).

IN: In my puzzle there is a Brit, a Norwegian, a German and a Danish. There are 4 buildings, where the previously mentioned people live. There are four icecream flavors: vanilla, soda, cookie and chocolate.

OUT: person(brit; norwegian; german; danish). building(1..4). living_place(building, V) :- building(V). type(icecream_flavor, V) :- icecream_flavor(V). icecream_flavor(vanilla; soda; cookie; chocolate).

IN: There are 5 buildings and 5 people: a German, an Italian; a Brittish, a Spanish and a Chinese. The German person drinks Milk. The Water drinker lives on the right side of the Wine drinker. The Soda drinker lives next to the Milk drinker. The Beer drinker lives to the left of the Chinese.

OUT: building(1..5). living_place(building, V) :- building(V). person(german; italian; brittish; spanish; chinese). type(drink, V) :- drink(V). drink(milk; water; wine; soda; beer). same_place(german, milk). right(water, wine). next_to(soda, milk). left(beer, chinese).

IN: There are 3 men involved: One of them is from Germany, the other one is French and the last one is Nigerian. The German man lives in the house number 1. The Nigerian lives in the last one (this is, the number 3).

OUT: person(german; french; nigerian). house(1..3). living_place(house, V) :- house(V). same_place(german, 1). same_place(nigerian, 3).

IN: A Brittish, a Japanese, an Albanese and a Norwegian live in this neighborhood. Each one has a house, with a total of five houses. The number one is inhabited by the Japanese man. The third house is where the.

############ [17:34] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
same_place(blends, cat).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
same_place(blends, water).

############ [17:34] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).
# Explicaci�n LN: The British person lives in the red house number 3, drinks milk, has a bird as a pet, and smokes Pall Mall. The Danish person lives in the blue house number 2, drinks tea, has a horse as a pet, and smokes Blends. The German person lives in the green house number 4, drinks coffee, has a fish as a pet, and smokes Prince. The Norwegian person lives in the yellow house number 1, drinks water, has a cat as a pet, and smokes Dunhill. The Swedish person lives in the white house number 5, drinks beer, has a dog as a pet, and smokes Blue Master.

############ [20:7] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:

IN: There are three boats. There are a Spanish, an English and a Chinese. There are three drinks: Tea, Milk and Soda. The Spanish man drinks Soda. Soda is represented with the next image: "cocacola". There's a Dog, a Cat and a Horse. The Spanish keeps the Cat, while the English man has a Dog. The Horse is represented by the image called "horse". The Cat is represented by "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg" The Spanish man has a red boat. The chinese man, on the other hand, lives in a Purple boat. Represent the boat with "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg".

OUT: 
boat(1..3). living_place(boat, V) :- boat(V). type(color, V) :- color(V). color(red; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). same_place(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg"). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola").

############ [20:7] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:

**1**
living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow; black). person(spanish; italian; german; danish; british; swedish; norwegian; french; portuguese; iranian; turkish; russian; american; african; asian). house(1..4). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place/english/, dog). same_place/horse/, horse/. image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). image(horse, "horse"). house(1..3). same_place(spanish, red). same_place/chinese/, purple).

**2**
house(1..10). living_place(house, V) :- house(V). person(german; italian; romanian). image(italian, "italia_flag"). image(romanian, "romania_flag").

**3**
building(1..6). living_place(building, V) :- building(V). type(color, V) :- color(V). color(white; beige; blue; red; green; orange). type(drink, V) :- drink(V). drink(water; tea; whiskey; soda; juice; milk; coffee; horchata; gazpacho; beer). same_place(beer, green).

**4**
person(spanish; chinese). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; blue_master; dunhill). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(coffee, marlboro).

**5**
type(drink, V) :- drink(V). drink(water; tea; whiskey; soda; juice; milk; coffee; horchata; gazpacho; beer). same_place(beer, green).

**6**
house(1..9). living_place(house, V) :- house(V). person(european; african; asian; american). next_to(european, african). right(asian, african). left(american, european).

**7**
person(irish). type(drink, V) :- drink(V). drink(tea). same_place(irish, tea). type(pet, V) :- pet(V). pet(horse). same_place(irish, horse). living_place(hut, V) :- hut(V). type(color, V) :- color(V). color(beige). same_place(irish, beige). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados). same_place(irish, ducados). person(filipino). next_to(irish, filipino). hut(1..2).

**8**
house(1..3). living_place(house, V) :- house(V). person(turkish; russian). next_to(turkish, russian). type(drink, V) :- drink(V). drink(soda). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends). next_to(soda, blends). type(pet, V) :- pet(V). pet(dog). type(color, V) :- color(V). color(red). right(dog, red).

**9**
type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(dunhill, horse). same_place(dog, blue_master). same_place(cat, camel).

**10**
type(pet, V) :- pet(V). pet(bird). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(pall_mall). same_place(bird, pall_mall). type(color, V) :- color(V). color(yellow). same_place(bird, yellow). living_place(house, V) :- house(V). same_place(2, bird). same_place(3, pall_mall).

**11**
type(pet, V) :- pet(V). pet(fish). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro). type(drink, V) :- drink(V). drink(beer). same_place(marlboro, beer).

**12**
person(german; brittish; swedish). house(1). living_place(house, V) :- house(V). same_place(german, 1). house(11). same_place(swedish, 11). house(4). same_place(brittish, 4).

**13**
living_place.

############ [20:7] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola"). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").
# Explicaci�n LN: The Spanish person owns a boat with the number 3, drinks soda, has a cat as pet and his boat is also colored red. The English person owns a boat with the number 1, drinks milk and keeps a dog as pet. Meanwhile, the Chinese person owns a boat with the number 2, drinks tea and keeps a horse as pet, and his boat is purple.
# M�dulo gr�fico: ['Traceback (most recent call last):\n', '  File "C:\\Users\\Dro\\Desktop\\ASP-Puzzle-Solver\\ASP-Puzzle-Solver\\src\\py\\modulo_grafico\\einstein_grafico.py", line 344, in einstein_grafico\n    representa_estado_inicial(elemento_central, grupos, rutas_imagenes).save(inicial_save_path)\n', '  File "C:\\Users\\Dro\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\PIL\\Image.py", line 2456, in save\n    fp = builtins.open(filename, "w+b")\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\Dro\\\\Desktop\\\\ASP-Puzzle-Solver\\\\ASP-Puzzle-Solver\\\\resources\\\\tmp\\\\estado_inicial.png'\n"]

############ [20:7] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.
OUT: living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).

IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.
OUT: living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog). next_to(dog, red). same_place(red, 1). house(1..9).

IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The german lives in the third one.
OUT: house(1..10). living_place(house, V) :- house(V). person(swedish; spanish; german). same_place(swedish, 10). same_place(spanish, 1). same_place(german, 3).

...

IN: There's a Spanish, a Danish and a Norwegian woman. The puzzle has 3 houses. The houses are Green, Blue and Red. The taiwanese man lives in the third one. The red house is next to the yellow house. The cyan house is to the left of the purple one.
OUT: type(color, V) :- color(V). color(green; blue; red; cyan; purple). house(1..3). living_place(house, V) :- house(V). person(spainish; danish; norwegian; taiwanese). same_place(taiwanese, 3). next_to(red, yellow). left(cyan, purple).

...

IN: The person who smokes Dunhill has a pet Horse. The person who keeps a Dog is also a Blue Master smoker. The man that keeps a cat as a pet is a Camel smoker.
OUT: type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(dunhill; blue_master; camel). type(pet, V) :- pet(V). pet(horse; dog; cat). same_place(dunhill, horse). same_place(dog, blue_master). same_place(cat, camel).

...

IN: The girl who has a Bird as a pet is a Pall Mall smoker and lives in a Yellow house. The person who lives in the second house has a Bird. Who owns the third house is a Pall Mall smoker.
OUT: type(pet, V) :- pet(V). pet(bird). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(pall_mall). same_place(bird, pall_mall). type(color, V) :- color(V). color(yellow). same_place(bird, yellow). living_place(house, V) :- house(V). same_place(2, bird). same_place(3, pall_mall).

...

IN: There's a German, a Brittish and a Swedish. The German lives in the first house. The Swedish lives in the eleventh house and the Brittish lives in the fourth house.
OUT: person(german; brittish; swedish). house(1). living_place(house, V) :- house(V). same_place(german, 1). house(11). same_place(swedish, 11). house(4). same_place(brittish, 4).

...

IN: The person who lives in the first house is a Marlboro smoker. The owner of the third house smokes Blue Master. The second house resident smokes a lot of Dunhill cigarettes.
OUT: living_place(house, V) :- house(V). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; blue_master; dunhill). house(1). same_place(1, marlboro). house(3). same_place(3, blue_master). house(2). same_place(2, dunhill).

...

IN: There are three boats. There are a Spanish, an English and a Chinese. There are three drinks: Tea, Milk and Soda. The Spanish man drinks Soda. Soda is represented with the next image: "cocacola". There's a Dog, a Cat and a Horse. The Spanish keeps the Cat, while the English man has a Dog. The Horse is represented by the image called "horse". The Cat is represented by "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg" The Spanish man has a red boat. The chinese man, on the other.

############ [20:7] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(red).

person(spanish; english; chinese).

house(1..11).
living_place(house, V) :- house(V).

type(pet, V) :- pet(V).
pet(dog; cat; horse).

type(drink, V) :- drink(V).
drink(tea; milk; soda).

image(soda, "cocacola").
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

same_place(spanish, soda).
same_place(english, dog).
same_place(chinese, purple).
same_place(spanish, red).

image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

############ [20:35] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

OUT:

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; red; green; yellow).
person(german; polish; english).
next_to(red, green).


IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house.

OUT:

house(1..9).
living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog).
next_to(dog, red).
same_place(red, 1).


IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The German lives in the third one.

OUT:

house(1..10).
living_place(house, V) :- house(V).
person(swedish; spanish; german).
same_place(swedish, 10).
same_place(spanish, 1).
same_place(german, 3).


IN: There is one house, where the Brittish lives. It's painted Red. The tobacco brands are two and they are Marlboro and Dunhill. The house where the Brittish lives is the number 1. The brittish lives to the left of the person who smokes Dunhill cigarettes.

OUT:

house(1).
living_place(house, V) :- house(V).
person(brittish).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; dunhill).
same_place(brittish, 1).
left(brittish, dunhill).


IN: There are two tobacco brands: Dunhill and Pall Mall. There are two drinks: Beer and Milk. The person that smokes Dunhill also drinks Beer. The Pall Mall smoker drinks Milk.

OUT:

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(dunhill; pall_mall).
type(drink, V) :- drink(V).
drink(beer; milk).
same_place(dunhill, beer).
same_place(pall_mall, milk).


IN: There are three houses. There is a Spanish, a German and a Brittish. The drinks are Milk, Coffee and Water. The person who lives in the house of the centre (that is, the second house) drinks Coffee. The owner of the first house drinks Milk.

OUT:

house(1..3).
living_place(house, V) :- house(V).
person(spanish; german; brittish).
type(drink, V) :- drink(V).
drink(milk; coffee; water).
same_place(coffee, 2).
same_place(milk, 1).


IN: In my puzzle there is a Brit, a Norwegian, a German and a Danish. There are 4 buildings, where the previously mentioned people live. There are four icecream flavors: vanilla, soda, cookie and chocolate.

OUT:

person(brit; norwegian; german; danish).
building(1..4).
living_place(building, V) :- building(V).
type(icecream_flavor, V) :- icecream_flavor(V).
icecream_flavor(vanilla; soda; cookie; chocolate).


IN: There are 5 buildings and 5 people: a German, an Italian; a Brittish, a Spanish and a Chinese. The German person drinks Milk. The Water drinker lives on the right side of the Wine drinker. The Soda drinker lives next to the Milk drinker. The Beer drinker lives to the left of the Chinese.

OUT:

building(1..5).
living_place(building, V) :- building(V).
person(german; italian; brittish; spanish; chinese).
type(drink, V) :- drink(V).
drink(milk; water; wine; soda; beer).
right(water, wine).
next_to(soda, milk).
left(beer, chinese).
same_place(german, milk).


IN: There are three drinks: coffee, milk and beer. Here's a photo for the milk: milk_image. There are four tobacco brands: Pall Mall, Dunhill, Blends and Blue Master. The owner of the house where Milk is drunk smokes Dunhill cigarettes. The Blends smoker drinks Beer.

OUT:

type(drink, V) :- drink(V).
drink(coffee; milk; beer).
image(milk, milk_image).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(pall_mall; dunhill; blends; blue_master).
same_place(m.

############ [20:35] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	prolog
type(boat, V) :- boat(V).
boat(1..3).
living_place(boat, V) :- boat(V).
person(spanish; english; chinese).
type(drink, V) :- drink(V).
drink(tea; milk; soda).
same_place(spanish, soda).
image(soda, "cocacola").
type(pet, V) :- pet(V).
pet(dog; cat; horse).
same_place(spanish, cat).
same_place(english, dog).
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").
type(color, V) :- color(V).
color(red; purple).
same_place(spanish, red).
same_place(chinese, purple).
image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").


I hope this meets your requirements! Let me know if you need further assistance.

############ [20:35] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow; blue; black; purple; grey; brown; orange). house(1..4). person(german; italian; romanian). type(drink, V) :- drink(V). drink(water; tea; whisky; soda; juice; milk; coffee; horchata; gazpacho; beer). type(pet, V) :- pet(V). pet(dog; cat; rabbit; mole; fish). type(image, V) :- image(V). image("https://640px-Cigarette_DS.jpg"; "https://img.jpg"; "https://www.cbc.ca/NCC_Opossums3_1920.jpg"; "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").

person(german; italian; romanian; swedish; danish; norwegian; african; chinese; british; french; portuguese; iranian; turkish; russian; filipino; japanese; albanese). house(1..10). type(color, V) :- color(V). color(red; green; white; black; yellow; purple; grey; brown; blue; orange). type(pet, V) :- pet(V). pet(dog; cat; horse). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; dunhill; blends; blue_master). type(drink, V) :- drink(V). drink(water; tea; whisky; soda; juice; milk; coffee; horchata; gazpacho; beer). type(image, V) :- image(V). image("john_image"; "italia_flag"; "romania_flag"; "https://640px-Cigarette_DS.jpg"; "https://img.jpg").

############ [20:35] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


person(spanish; english; chinese).

boat(1..3).
living_place(boat, V) :- boat(V).
type(color, V) :- color(V). color(red; purple).
same_place(spanish, red).
same_place(chinese, purple).

type(drink, V) :- drink(V). drink(tea; milk; soda).
same_place(spanish, soda).
image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse).
same_place(english, dog).
same_place(spanish, cat).
image(horse, "horse").
image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

############ [20:35] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(boat, V) :- boat(V). boat(1..3). living_place(boat, V) :- boat(V).

person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). image(soda, "cocacola").

type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(english, dog). same_place(spanish, cat). image(horse, "horse"). image(cat, "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg").

type(color, V) :- color(V). color(red; purple).

same_place(spanish, red). same_place(chinese, purple). image(boat, "https://t3.ftcdn.net/jpg/00/41/60/94/360_F_41609453_X3A8NNRDWvihqMLoJUVNmrQyKQgwgvh4.jpg").
# Explicaci�n LN: The Spanish person owns boat number 3, drinks soda and has a cat as pet. His house is painted red. On the other hand, the English person has a red boat, drinks milk and keeps a dog. Finally, the Chinese person owns boat number 2, drinks tea and has a horse as pet, his house being colored purple.

############ [20:55] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).

person(german; brittish; danish; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(german, 1).
same_place(swede, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(brittish, red).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [20:55] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swede, dog). same_place(danish, tea).

left(green, white). same_place(green, coffee).

same_place(pall_mall, bird). same_place(yellow, dunhill).

same_place(3, milk). same_place(norwegian, 1).

next_to(blends, cat). next_to(horse, dunhill).

same_place(blue_master, beer). same_place(german, prince).

next_to(norwegian, blue). next_to(blends, water).

############ [20:55] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swede, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [20:55] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).
person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).

same_place(brittish, red).
same_place(swede, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

image(brittish, "brittish_image").
image(danish, "danish_image").
image(german, "german_image").
image(norwegian, "norwegian_image").
image(swedish, "swedish_image").

next_to(red, green).
next_to(green, white).
next_to(white, blue).
next_to(blue, yellow).
next_to(yellow, red).

############ [20:55] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swede, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [20:58] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:

prolog
living_place(house, V) :- house(V).
house(1..10).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(white; yellow; green; red; blue).

image(X, Y) :- image(X, Y).
image(fish, "fish_image").

left(X, Y) :- left(X, Y).
right(X, Y) :- right(X, Y).
next_to(X, Y) :- next_to(X, Y).
same_place(X, Y) :- same_place(X, Y).

color(white; yellow; green; red; blue).

house(1..10).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

color(white; yellow; green; red; blue).

image(X, Y) :- image(X, Y).
image(fish, "fish_image").

left(X, Y) :- left(X, Y).
right(X, Y) :- right(X, Y).
next_to(X, Y) :- next_to(X, Y).
same_place(X, Y) :- same_place(X, Y).


This code generates the necessary predicates for the given inputs.

############ [20:58] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:

prolog
living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(red; green; white; yellow; blue).

house(1..11).

person(german; brittish; swedish; danish; norwegian).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; blue_master; dunhill; pall_mall; prince; blends).

image(X, Y) :- image(X, Y).

left(X, Y) :- left(X, Y).
right(X, Y) :- right(X, Y).
next_to(X, Y) :- next_to(X, Y).
same_place(X, Y) :- same_place(X, Y).

image(fish, "fish_image").
image(bird, "bird_image").
image(horse, "horse_image").
image(cat, "cat_image").

left(dog, pall_mall).
right(blends, beer).
next_to(blends, water).

same_place(german, 1).
same_place(swedish, 11).
same_place(brittish, 4).

same_place(1, marlboro).
same_place(2, dunhill).
same_place(3, blue_master).

same_place(blends, cat).
same_place(horse, dunhill).

same_place(beer, blue_master).

same_place(danish, tea).
same_place(swede, dog).
same_place(green, coffee).
same_place(yellow, dunhill).

same_place(3, milk).
same_place(norwegian, 1).
same_place(blue, beer).

same_place(prince, german).
same_place(blends, water).

############ [20:58] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V).

same_place(brittish, red).
same_place(swede, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [20:58] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).
house(1..5). living_place(house, V) :- house(V).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swede, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

############ [20:58] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:


house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swede, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [21:1] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

house(1..5). living_place(house, V) :- house(V). 

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).

same_place(swede, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

############ [21:1] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; green; white; yellow; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). house(1..5).

same_place(brittish, red).
same_place(swede, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [21:1] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swede, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).

############ [21:1] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:


type(color, V) :- color(V).
color(yellow; green; white; red; blue).

house(1..11).

living_place(house, V) :- house(V).

person(german; british; swedish; danish; norwegian).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; blue_master; dunhill; pall_mall; prince).
blends(pall_mall).
blue_master(marlboro).
dunhill(dundee).

same_place(british, red).
same_place(swede, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(bird, pall_mall).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
next_to(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [21:1] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5). living_place(house, V) :- house(V).

same_place(brittish, red).

same_place(swede, dog).

same_place(danish, tea).

left(green, white).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

same_place(blends, cat).

next_to(blends, cat).

next_to(horse, dunhill).

same_place(blue_master, beer).

same_place(prince, german).

next_to(norwegian, blue).

same_place(blends, water).

############ [21:39] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

############ [21:39] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	**IN:** The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

**OUT:**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; red; green; yellow).
person(german; polish; english).
next_to(red, green).


**IN:** The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.

**OUT:**

house(1..9).
living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog).
next_to(dog, red).
same_place(red, 1).


**IN:** There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The German lives in the third one.

**OUT:**

house(1..10).
living_place(house, V) :- house(V).
person(swedish; spanish; german).
same_place(swedish, 10).
same_place(spanish, 1).
same_place(german, 3).


**IN:** There is one house, where the Brittish lives. It's painted Red. The tobacco brands are two and they are Marlboro and Dunhill. The house where the Brittish lives is the number 1. The brittish lives to the left of the person who smokes Dunhill cigarettes.

**OUT:**

house(1).
living_place(house, V) :- house(V).
person(brittish).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; dunhill).
same_place(brittish, 1).
left(brittish, dunhill).


**IN:** There are two tobacco brands: Dunhill and Pall Mall. There are two drinks: Beer and Milk. The person that smokes Dunhill also drinks Beer. The Pall Mall smoker is a Milk drinker.

**OUT:**

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(dunhill; pall_mall).
type(drink, V) :- drink(V).
drink(beer; milk).
same_place(dunhill, beer).
same_place(pall_mall, milk).


**IN:** There are three houses. An african lives in the middle one (this is, the second one). Represent the African man with the image "africa_flag".

**OUT:**

house(1..3).
living_place(house, V) :- house(V).
person(african).
same_place(african, 2).
image(african, "africa_flag").


**IN:** There are a Spanish, a Danish and a Norwegian woman. The puzzle has 3 houses. The houses are Green, Blue and Red. The taiwanese man lives in the third house.

**OUT:**

house(1..3).
living_place(house, V) :- house(V).
person(spanish; danish; norwegian).
type(color, V) :- color(V).
color(green; blue; red).
same_place(taiwanese, 3).


**IN:** There are the following drinks: Coffee, Milk and a Dog and a Cat, respectively. The Dog owner drinks Milk. The Coffee drinker has a Cat. The owner of the Cat lives next to the person who drinks Milk. The person with the Dog lives next to the Cat owner.

**OUT:**

type(drink, V) :- drink(V).
drink(coffee; milk).
type(pet, V) :- pet(V).
pet(dog; cat).
same_place(dog, milk).
same_place(coffee, cat).
next_to(cat, milk).
next_to(dog, cat).


**IN:** Of the 9 houses, The Brittish man lives in the Red house. Represent the house with https://fotocasa.com/casa. The person who lives in the house painted Red has a neighbor with a Green house.

**OUT:**

house(1..9).
living_place(house, V) :- house(V).
person(brittish).
type(color, V) :- color(V).
color(red; green).
same_place(brittish, red).
image(house, "https://fotocasa.com/casa").
next_to(red, green).


**IN:** There are 5 buildings. The Galician girl has a tiger in her building that she keeps as a pet. The Galician lives in the fifth building.

**OUT:**

building(1..5).
living_place(building, V) :- building(V).
person(galician.

############ [21:39] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	**Output 1**

living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow; black). house(1..4). person(german; italian; romanian). image(italian, "italia_flag"). image(romanian, "romania_flag").


**Output 2**

house(1..10). living_place(house, V) :- house(V). person(german; italian; romanian). same_place(german, 1). same_place(italian, 2). same_place(romanian, 3). same_place(german, red). same_place(italian, green). same_place(romanian, yellow).


**Output 3**

person(brittish; japanese; albanese; norwegian). house(1..5). living_place(house, V) :- house(V). same_place(japanese, 1). same_place(norwegian, 3). type(color, V) :- color(V). color(red; white; blue; green; yellow).


**Output 4**

type(color, V) :- color(V). color(red; green; blue; purple; grey; brown; blue; orange). building(1..6). living_place(building, V) :- building(V). right(orange, beige). next_to(red, white).


**Output 5**

house(1..4). living_place(house, V) :- house(V). person(brittish; german). type(color, V) :- color(V). color(red; green; yellow; black). same_place(brittish, red). same_place(german, green).


**Output 6**

building(1..7). living_place(building, V) :- building(V). type(color, V) :- color(V). color(red; yellow; blue; green). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(winston; blue_master; marlboro; pall_mall).


**Output 7**

house(1..3). living_place(house, V) :- house(V). person(african; brittish). type(color, V) :- color(V). color(yellow; blue). same_place(african, yellow). same_place(brittish, blue).


**Output 8**

house(1..10). living_place(house, V) :- house(V). type(drink, V) :- drink(V). drink(water; tea; whiskey; soda; juice; milk; coffee; horchata; gazpacho; beer). type(color, V) :- color(V). color(red; green; white; black; yellow; purple; grey; brown; blue; orange). same_place(beer, green).


**Output 9**

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; pall_mall; dunhill). same_place(blends, pall_mall). next_to(pall_mall, dunhill). image(dunhill, "https://640px-Cigarette_DS.jpg"). image(pall_mall, "https://img.jpg").


**Output 10**

person(spanish; chinese). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; blends). type(drink, V) :- drink(V). drink(coffee; wine). same_place(coffee, marlboro). right(wine, chinese).


**Output 11**

house(1..6). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; raccoon). right(dog, raccoon). same_place(raccoon, 3).


**Output 12**

type(drink, V) :- drink(V). drink(beer; water; coffee). same_place(beer, coffee). right(water, beer).


**Output 13**

living_place(house, V) :- house(V). person(european; african; asian; american). next_to(european, african). right(asian, african). left(american, european).


**Output 14**

person(spanish; chinese). next_to(spanish, chinese). house(1..2). living_place(house, V) :- house(V). same_place(spanish, 1). same_place(chinese, 2).


**Output 15**

house(1..3). living_place(house, V) :- house(V). person(turkish; russian). next_to(turkish, russian). type(drink, V) :- drink(V). drink(soda). type(tobacco.

############ [21:39] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:


house(1..5).
living_place(house, V) :- house(V).

type(color, V) :- color(V). color(yellow; green; white; red; blue).
person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(prince, german).
next_to(norwegian, blue).
same_place(blends, water).

############ [21:39] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).

type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).

left(green, white).
same_place(green, coffee).

same_place(pall_mall, bird).
same_place(yellow, dunhill).

same_place(3, milk).
same_place(norwegian, 1).

next_to(blends, cat).
next_to(horse, dunhill).

same_place(blue_master, beer).
same_place(german, prince).

next_to(norwegian, blue).
same_place(blends, water).

############ [21:57] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).
same_place(norwegian, 1).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
same_place(blends, water).

############ [21:57] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). person(brittish; danish; german; norwegian; swedish). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).
# Explicaci�n LN: The British person lives in the house number 3, with a red house, a bird as a pet, drinking milk, and smoking Pall Mall tobacco. The Danish person lives in the house number 2, with a blue house, a horse as a pet, drinking tea, and smoking blends tobacco. The German person lives in the house number 4, with a green house, a fish as a pet, drinking coffee, and smoking Prince tobacco. The Norwegian person lives in the house number 1, with a yellow house, a cat as a pet, drinking water, and smoking Dunhill tobacco. The Swedish person lives in the house number 5, with a white house, a dog as a pet, drinking beer, and smoking Blue Master tobacco.

############ [22:49] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:

IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

OUT: living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).

IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.

OUT: living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog). next_to(dog, red). same_place(red, 1). house(1..9).

IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The German lives in the third one.

OUT: house(1..10). living_place(house, V) :- house(V). person(swedish; spanish; german). same_place(swedish, 10). same_place(spanish, 1). same_place(german, 3).

IN: There is one house, where the Brittish lives. It's painted Red. The tobacco brands are two and they are Marlboro and Dunhill. The house where the Brittish lives is the number 1. The brittish lives to the left of the person who smokes Dunhill cigarettes.

OUT: living_place(house, V) :- house(V). person(brittish). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; dunhill). same_place(brittish, 1). left(brittish, dunhill).

IN: There are two tobacco brands: Dunhill and Pall Mall. There are two drinks: Beer and Milk. The person that smokes Dunhill also drinks Beer. The Pall Mall smoker is a Milk drinker.

OUT: type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(dunhill; pall_mall). type(drink, V) :- drink(V). drink(beer; milk). same_place(dunhill, beer). same_place(pall_mall, milk).

IN: There are three houses. There is a Spanish, a German and a Brittish. The drinks are Milk, Coffee and Water. The person who lives in the house of the centre (that is, the second house) drinks Coffee. The owner of the first house drinks Milk.

OUT: house(1..3). living_place(house, V) :- house(V). person(spanish; german; brittish). type(drink, V) :- drink(V). drink(milk; coffee; water). same_place(coffee, 2). same_place(milk, 1).

IN: In my puzzle there is a Brit, a Norwegian, a German and a Danish. There are 4 buildings, where the previously mentioned people live. There are four icecream flavors: vanilla, soda, cookie and chocolate.

OUT: person(brit; norwegian; german; danish). building(1..4). living_place(building, V) :- building(V). type(icecream_flavor, V) :- icecream_flavor(V). icecream_flavor(vanilla; soda; cookie; chocolate).

IN: There are 5 buildings and 5 people: a German, an Italian; a Brittish, a Spanish and a Chinese. The German person drinks Milk. The Water drinker lives on the right side of the Wine drinker. The Soda drinker lives next to the Milk drinker. The Beer drinker lives to the left of the Chinese.

OUT: building(1..5). living_place(building, V) :- building(V). person(german; italian; brittish; spanish; chinese). type(drink, V) :- drink(V). drink(milk; water; wine; soda; beer). right(water, wine). next_to(soda, milk). left(beer, chinese).

IN: There are three houses. An African man lives in the middle one (this is, the second one). Represent the African man with the image "africa_flag".

OUT: house(1..3). living_place(house, V) :- house(V). person(african). same_place(african, 2). image(african, "africa_flag").

IN: There are a Swedish, a Danish and a Norwegian woman. The puzzle has 3 houses. The houses are Green, Blue and Red. The taiwanese man lives in the third one. The red house is next to the yellow house. The cyan house is to the left of the purple one.

OUT: person(swedish; danish; norwegian). house(1..3). living_place(house, V) :- house(V). type.

############ [22:49] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; ivory; crimson; indigo).

house(1..5). living_place(house, V) :- house(V).

person(irish; danish; german; norwegian; moroccan).

type(pet, V) :- pet(V). pet(dog; fish; bird; zebra; snail).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(irish, crimson). same_place(moroccan, dog).

same_place(danish, tea).

same_place(green, coffee).

same_place(pall_mall, bird).

same_place(yellow, dunhill).

same_place(3, milk).

same_place(norwegian, 1).

next_to(blends, snail).

next_to(zebra, dunhill).

next_to(blue_master, beer).

same_place(german, prince).

next_to(norwegian, blue).

next_to(blends, water).

Let me know if you need any further assistance!.

############ [22:49] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(yellow; green; ivory; crimson; indigo).

person(irish; danish; german; norwegian; moroccan).

type(pet, V) :- pet(V).
pet(dog; fish; bird; zebra; snail).

type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).
living_place(house, V) :- house(V).
same_place(irish, crimson).
same_place(moroccan, dog).
same_place(danish, tea).
left(green, ivory).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
left(blends, snail).
right(zebra, dunhill).
same_place(blue_master, beer).
same_place(prince, german).
right(norwegian, blue).
left(blends, water).
# Explicaci�n LN: The Irish live in the crimson-coloured house number 4 with their zebra as pet, drinking beer and smoking Blue Master tobacco. Meanwhile, the Danish inhabit house number 5, which has an indigo colour, owning a bird as pet, drinking tea and enjoying Pall Mall cigarettes.

############ [22:52] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; ivory; crimson; indigo). person(irish; danish; german; norwegian; moroccan). type(pet, V) :- pet(V). pet(dog; fish; bird; zebra; snail). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5). living_place(house, V) :- house(V). same_place(norwegian, 1). same_place(irish, crimson). same_place(moroccan, dog). type(drink, V) :- drink(V). drink(tea). same_place(danish, tea). same_place(coffee, green).

next_to(green, ivory). same_place(coffee, green). same_place(green, coffee). same_place(irovy, coffee). same_place(coffee, irovy). same_place(irovy, green).

same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(2, pall_mall). same_place(1, blue_master). same_place(blends, snail). same_place(snail, blends). same_place(blends, water). same_place(blends, 2).

same_place(zebra, dunhill). same_place(dunhill, zebra). same_place(zebra, yellow). same_place(yellow, zebra). same_place(zebra, 3). same_place(3, zebra).

same_place(prince, german). same_place(prince, 1). same_place(blue_master, beer). same_place(beer, blue_master). same_place(blue_master, 4). same_place(4, blue_master).

right(blends, snail). same_place(blends, water). same_place(blends, 2). same_place(snail, blends). same_place(snail, 2). same_place(blends, 2). same_place(blends, snail).

############ [22:52] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	person(irish; danish; german; norwegian; moroccan).

house(1..5).

type(color, V) :- color(V). color(yellow; green; ivory; crimson; indigo).

type(pet, V) :- pet(V). pet(dog; fish; bird; zebra; snail).

type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

living_place(house, V) :- house(V). same_place(irish, crimson). same_place(moroccan, dog). same_place(danish, tea). same_place(green, coffee). same_place(ivory, milk). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, snail). same_place(dunhill, zebra). same_place(blue_master, beer). same_place(prince, german).

right(yellow, green). left(green, ivory). right(3, dunhill). next_to(blends, snail). next_to(zebra, dunhill). right(blue_master, beer).

############ [22:52] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; ivory; crimson; indigo). person(irish; danish; german; norwegian; moroccan). type(pet, V) :- pet(V). pet(dog; fish; bird; zebra; snail). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(irish, crimson). same_place(moroccan, dog). same_place(danish, tea). left(green, ivory). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, snail). next_to(zebra, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).
# Explicaci�n LN: The Irish person lives in the 5th house with crimson color, has a zebra as pet, drinks beer, and smokes Blue Master tobacco. The Danish person lives in the 4th house with yellow color, has a fish as pet, drinks tea, and smokes Dunhill tobacco. The German person lives in the 2nd house with ivory color, has a snail as pet, drinks water, and smokes Prince tobacco. The Norwegian person lives in the 1st house with green color, has a bird as pet, drinks coffee, and smokes Pall Mall tobacco. And finally, the Moroccan person lives in the 3rd house with indigo color, has a dog as pet, drinks milk, and smokes Blends tobacco.

############ [23:30] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

house(1..5). living_place(house, V) :- house(V).

person(irish; welsh; scottish; belgian; moroccan).

type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm).

type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

same_place(irish, crimson).

same_place(moroccan, dragon).

same_place(welsh, gin).

next_to(olive, ivory).

same_place(olive, whiskey).

same_place(wyvern, pueblo).

same_place(gold, winston).

same_place(3, vodka).

same_place.belgian, 1).

next_to(ducados, wyrm).

next_to(wyrm, winton).

same_place(camels, wine).

same_place(scottish, lucky_strike).

next_to(indigo, belgian).

next_to(ducados, vermut).

############ [23:30] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). house(1..5). living_place(house, V) :- house(V). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winton; pueblo; lucky_strike). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winston). next_to(winston, chimera). next_to(camels, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).

Please let me know if I made any mistakes!.

############ [23:30] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	person(irish; welsh; scottish; belgian; moroccan).
house(1..5). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm).
type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1). living_place(house, V) :- house(V). same_place(1, belgian). house(2). same_place(2, olive). house(3). same_place(3, vodka). house(4). same_place(4, irish). house(5). same_place(5, indigo).

same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). same_place(olive, whiskey). same_place(i, whiskeys). same_place(3, vodka). same_place(2, olive). same_place(wyrm, ducados). same_place(wyrm, vermut). same_place(chimera, winston). same_place(wyrm, camels). same_place(scottish, lucky_strike). same_place(indigo, belgium). same_place(ducados, wyrm). same_place(winston, chimera). same_place(camel, wine). same_place(ducados, vermut).

############ [23:30] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the complete solution:


type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

house(1..5).

person(irish; welsh; scottish; belgian; moroccan).

type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm).

type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

living_place(house, V) :- house(V).

same_place(irish, crimson).

same_place(moroccan, dragon).

same_place(welsh, gin).

left(olive, ivory).

same_place(olive, whiskey).

same_place(3, vodka).

same_place(belgian, 1).

next_to(ducados, wyrm).

next_to(wyrm, winton).

next_to(wyrm, winton).

same_place(camel, wine).

same_place(scottish, lucky_strike).

next_to(indigo, belgian).

next_to(ducados, vermut).

############ [23:30] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(gold; olive; ivory; crimson; indigo).

person(irish; welsh; scottish; belgian; moroccan).

type(pet, V) :- pet(V).
pet(dragon; gryphon; wyvern; chimera; wyrm).

type(drink, V) :- drink(V).
drink(wine; whiskey; gin; vodka; vermut).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5).

same_place(irish, crimson).
same_place(moroccan, dragon).
same_place(welsh, gin).
same_place(olive, whiskey).
left(olive, ivory).

same_place(wyrm, ducados).
next_to(ducados, vermut).

next_to(wyrm, winton).
next_to(wyrm, camel).
next_to(wyrm, pueblo).
next_to(wyrm, lucky_strike).

next_to(wyrm, vodka).
next_to(wyrm, wine).
next_to(wyrm, whiskey).
next_to(wyrm, gin).
next_to(wyrm, vermut).

same_place(scottish, lucky_strike).
next_to(indigo, belgian).

############ [23:34] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	prolog
type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).
person(irish; welsh; scottish; belgian; moroccan).

house(1..5). living_place(house, V) :- house(V).
type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm).
type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin).
left(olive, ivory). same_place(olive, whiskey). same_place(wyvern, pueblo). same_place(gold, winston). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winston). next_to(chimera, winston). same_place(camel, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).

############ [23:34] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:


type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).
house(1..5).

person(irish; welsh; scottish; belgian; moroccan).

type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm).

type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut).

type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

living_place(house, V) :- house(V).

same_place(irish, crimson).
same_place(moroccan, dragon).
same_place(welsh, gin).
left(olive, ivory).
drink(whiskey, olive).
pet(wyvern, pueblo).
smoke(winston, gold).
same_place(3, vodka).
same_place(belgian, 1).
next_to(ducados, wyrm).
next_to(wyrm, winton).
smoke(camel, wine).
smoke(lucky_strike, scottish).
next_to(indigo, belgian).
next_to(vermut, ducados).

############ [23:34] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:

IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

OUT: living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).

IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.

OUT: living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog). next_to(dog, red). house(1..9).

IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The German lives in the third one.

OUT: house(1..10). living_place(house, V) :- house(V). person(swedish; spanish; german). same_place(swedish, 10). same_place(spanish, 1). same_place(german, 3).

IN: There is one house, where the Brittish lives. It's painted Red. The tobacco brands are two and they are Marlboro and Dunhill. The house where the Brittish lives is the number 1. The brittish lives to the left of the person who smokes Dunhill cigarettes.

OUT: house(1). living_place(house, V) :- house(V). person(brittish). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(marlboro; dunhill). same_place(brittish, 1). left(brittish, dunhill).

IN: There are two tobacco brands: Dunhill and Pall Mall. There are two drinks: Beer and Milk. The person that smokes Dunhill also drinks Beer. The Pall Mall smoker is a Milk drinker.

OUT: type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(dunhill; pall_mall). type(drink, V) :- drink(V). drink(beer; milk). same_place(dunhill, beer). same_place(pall_mall, milk).

IN: There are three houses. An African man lives in the middle one (this is, the second one). Represent the African man with the image "africa_flag".

OUT: house(1..3). living_place(house, V) :- house(V). person(african). same_place(african, 2). image(african, "africa_flag").

IN: There are a Swedish, a Danish and a Norwegian woman. The puzzle has 3 houses. The houses are Green, Blue and Red. The Swedish lives in the second house. Beer is drank by the owner of the Blue house. The Wine and the Red color are in the same house. The owner of the Green house drinks Water. The man who lives in the centre house (there are 3 houses, so the middle one is the number 2) drinks Coffee.

OUT: person(swedish; danish; norwegian). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(green; blue; red). type(drink, V) :- drink(V). drink(water; wine; beer). same_place(swedish, 2). same_place(beer, blue). same_place(wine, red). same_place(green, water). same_place(coffee, 2).

IN: The puzzle has two houses. An Italian kid and a Romanian folk live in each house. The kid is represented by the following image: "italia_flag". The romanian man, on the other hand, has romania_flag representing him.

OUT: house(1..2). living_place(house, V) :- house(V). person(italian; romanian). image(italian, "italia_flag"). image(romanian, "romania_flag").

IN: Of the 9 houses, The Brittish man lives in the Red house. Represent the house with https://fotocasa.com/casa. The person who lives in the house painted Red has a neighbor with a Green house.

OUT: house(1..9). living_place(house, V) :- house(V). person(brittish). type(color, V) :- color(V). color(red; green). same_place(brittish, red). image(house, "https://fotocasa.com/casa"). next_to(red, green).

IN: There are 3 buildings. The Norwegian lives in the building painted in Purple. This building is the number 23403.

OUT: building(1..3). living_place(building, V) :- building(V). person(norwegian). type(color, V) :- color(V.

############ [23:34] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

person(irish; welsh; scottish; belgian; moroccan).

pet(dragon; gryphon; wyvern; chimera; wyrm).

drink(wine; whiskey; gin; vodka; vermut).

tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5).

living_place(house, V) :- house(V).

same_place(irish, crimson).

same_place(moroccan, dragon).

same_place(welsh, gin).

left(olive, ivory).

same_place(olive, whiskey).

same_place(3, vodka).

same_place(belgian, 1).

next_to(ducados, wyrm).

next_to(wyrm, winston).

next_to(winston, chimera).

next_to(camels, wine).

next_to(scottish, lucky_strike).

next_to(indigo, belgian).

next_to(vermut, ducados).

############ [23:34] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike). person(irish; welsh; scottish; belgian; moroccan). house(1..5). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(wyvern, pueblo). same_place(gold, winston). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winton). next_to(camels, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).
# Explicaci�n LN: The Irish person lives in the third house, with a crimson color, has a wyvern as pet, drinks vodka and smokes Pueblo tobacco. The Welsh person lives in the second house, with an indigo color, has a gryphon as pet, drinks gin and smokes Ducados tobacco. The Scottish person lives in the fourth house, with an olive color, has a chimera as pet, drinks whiskey and smokes Lucky Strike tobacco. The Belgian person lives in the first house, with a gold color, has a wyrm as pet, drinks Vermut and smokes Winston tobacco. The Moroccan person lives in the fifth house, with an ivory color, has a dragon as pet, drinks wine and smokes Camel tobacco.

############ [11:53] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). house(1..5).

person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(wyvern, pueblo). same_place(gold, winston). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winton). next_to(camels, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).
# Explicaci�n LN: The Irish person lives in the house number 3, with a crimson-colored home, owning a wyvern as a pet, drinking vodka and smoking Pueblo tobacco. The Welsh person resides in the house number 2, with an indigo-colored home, keeping a gryphon as a pet, drinking gin and smoking Ducados tobacco. The Scottish person lives in the house number 4, with an olive-colored home, owning a chimera as a pet, drinking whiskey and smoking Lucky Strike tobacco. The Belgian person resides in the house number 1, with a gold-colored home, having a wyrm as a pet, drinking Vermut and smoking Winston tobacco. Finally, the Moroccan person lives in the house number 5, with an ivory-colored home, owning a dragon as a pet, drinking wine and smoking Camel tobacco.

############ [17:32] LOG ############:

### Intento 0 de 4  ###

############ [17:32] LOG ############:

### Intento 0 de 4  ###

############ [18:40] LOG ############:

### Intento 0 de 4  ###

############ [18:41] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	language(german; spanish; galician; catalan; basque; french; english; arabic). seats_number(10). person(alberto; carlos; carolina; paco; lucia; isabel; jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose). opposite(alberto, carolina). speaks(isabel, french). next_to(isabel, pedro). next_to(claudia, carlos). speaks(carolina, basque). next_to(carolina, french).
# Explicaci�n LN: Martina is seated in the first chair, Claudia in the second, Pedro in the seventh, Isabel in the eighth, Carolina in the ninth, Lucia in the tenth, Alberto is seated in the fourth, Carlos in the third and finally Paco is seated in the fifth as well as Jose is seated in the sixth.

############ [19:12] LOG ############:

### Intento 0 de 4  ###

############ [19:13] LOG ############:

### Intento 0 de 4  ###

############ [19:14] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM

############ [19:14] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM

############ [19:14] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM

############ [19:14] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM

############ [19:14] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM

############ [19:17] LOG ############:

### Intento 0 de 4  ###

############ [19:18] LOG ############:

### Intento 0 de 4  ###

############ [19:19] LOG ############:

### Intento 0 de 4  ###

############ [19:19] LOG ############:

### Intento 0 de 4  ###

############ [19:21] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:21] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:21] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:21] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:21] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:22] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:22] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:22] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:22] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:22] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:25] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:25] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:25] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:25] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:25] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:26] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	4b8749be-38d2-4f66-9417-e05debfce1c6, Meta-Llama-3-8B-Instruct, https://api.awanllm.com/v1/chat/completions

############ [19:26] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	4b8749be-38d2-4f66-9417-e05debfce1c6, Meta-Llama-3-8B-Instruct, https://api.awanllm.com/v1/chat/completions

############ [19:26] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	4b8749be-38d2-4f66-9417-e05debfce1c6, Meta-Llama-3-8B-Instruct, https://api.awanllm.com/v1/chat/completions

############ [19:26] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	4b8749be-38d2-4f66-9417-e05debfce1c6, Meta-Llama-3-8B-Instruct, https://api.awanllm.com/v1/chat/completions

############ [19:26] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	4b8749be-38d2-4f66-9417-e05debfce1c6, Meta-Llama-3-8B-Instruct, https://api.awanllm.com/v1/chat/completions

############ [19:28] LOG ############:

### Intento 0 de 4  ###

############ [19:33] LOG ############:

### Intento 0 de 4  ###

############ [19:33] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	<html>

<head><title>502 Bad Gateway</title></head>

<body>

<center><h1>502 Bad Gateway</h1></center>

<hr><center>openresty</center>

</body>

</html>



############ [19:33] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	<html>

<head><title>502 Bad Gateway</title></head>

<body>

<center><h1>502 Bad Gateway</h1></center>

<hr><center>openresty</center>

</body>

</html>



############ [19:33] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	<html>

<head><title>502 Bad Gateway</title></head>

<body>

<center><h1>502 Bad Gateway</h1></center>

<hr><center>openresty</center>

</body>

</html>



############ [19:33] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	{"id":"cmpl-9c7ffba5a5664d8f8e10dd20e7653b23","object":"chat.completion","created":1719077645,"model":"Meta-Llama-3-8B-Instruct","choices":[{"index":0,"message":{"role":"assistant","content":"Here is the output:\n\nseats_number(4). person(jose; martina; claudia; pedro). language(german; spanish; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(martina, jose). opposite(martina, jose)."},"logprobs":null,"finish_reason":"stop","stop_reason":128009}],"usage":{"prompt_tokens":2120,"total_tokens":2209,"completion_tokens":89}}

############ [19:33] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	<html>

<head><title>502 Bad Gateway</title></head>

<body>

<center><h1>502 Bad Gateway</h1></center>

<hr><center>openresty</center>

</body>

</html>



############ [19:39] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:39] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:39] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:39] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:39] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error decodificando la respuesta de la API de LLM. Respuesta recibida: <Response [502]>

############ [19:50] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [19:50] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [19:50] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [19:50] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [19:50] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [20:16] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [20:16] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [20:16] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [20:16] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [20:16] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:45] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:

**Output 1**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(red; yellow; green; blue; white).
person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(prince, german).
next_to(norwegian, blue).
same_place(blends, water).


**Output 2**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; red; green; blue; yellow).
person(brittish; german; japanese; albanese; norwegian).
type(pet, V) :- pet(V).
pet(dog; cat; raccoon).
type(drink, V) :- drink(V).
drink(tea; wine; beer; juice; milk; coffee; horchata; gazpacho; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; blue_master; dunhill; pall_mall; blends).
same_place(brittish, red).
same_place(german, 2).
same_place(japanese, 3).
same_place(albanese, 4).
same_place(norwegian, 5).
right(whiskey, water).
next_to(soda, water).
same_place(water, tea).
left(soda, tea).
right(yellow, blue).


**Output 3**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; yellow; blue; green; red).
person(brittish; italian; romanian; congolese; swedish).
type(pet, V) :- pet(V).
pet(dog; cat; rabbit; mole; fish).
type(drink, V) :- drink(V).
drink(water; tea; whiskey; soda; juice; milk; coffee; horchata; gazpacho; beer).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; blue_master; dunhill; pall_mall; blends).
same_place(brittish, 1).
same_place(italian, 2).
same_place(romanian, 3).
same_place(congolese, 4).
same_place(swedish, 5).
right(whiskey, water).
next_to(soda, water).
same_place(water, tea).
left(soda, tea).
right(yellow, blue).


**Output 4**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; yellow; blue; green; red).
person(brittish; galician; irish; sudafrican; turkish).
type(pet, V) :- pet(V).
pet(dog; cat; horse).
type(drink, V) :- drink(V).
drink(tea; water; beer; juice; milk; coffee; horchata; gazpacho).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(marlboro; blue_master; dunhill; pall_mall; blends).
same_place(brittish, 1).
same_place(galician, 2).
same_place(irish, 3).
same_place(sudafrican, 4).
same_place(turkish, 5).
right(whiskey, water).
next_to(soda, water).
same_place(water, tea).
left(soda, tea).
right(yellow, blue).


**Output 5**

living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; yellow; blue; green; red).
person(brittish; italian; romanian; congolese; swedish).
type(pet, V) :- pet(V).
pet(dog; cat; rabbit; mole; fish).
type(drink, V) :- drink(V).
drink(water; tea; whiskey; soda; juice; milk; coffee; horchata; gazp.

############ [12:45] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


person(brittish; danish; german; norwegian; swedish).

house(1..5).
type(color, V) :- color(V). color(yellow; green; white; red; blue).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).
same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
same_place(blends, cat).
next_to(blends, cat).
next_to(dog, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
next_to(blends, water).

############ [12:45] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). same_place(blends, water).

Please let me know if I made any mistakes!.

############ [12:45] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:45] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:53] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). living_place(house, V) :- house(V). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, water). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue).

############ [12:53] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5).

person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blue, norwegian). same_place(blends, water). 

next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(blue, beer). next_to(blends, water).

############ [12:53] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:53] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:53] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [12:55] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error con la petici�n a API LLM. Respuesta recibida: {'statusCode': 429, 'message': 'Ratelimit exceeded per day. Please upgrade your plan or wait 24 hours'}

############ [12:55] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error con la petici�n a API LLM. Respuesta recibida: {'statusCode': 429, 'message': 'Ratelimit exceeded per day. Please upgrade your plan or wait 24 hours'}

############ [12:55] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error con la petici�n a API LLM. Respuesta recibida: {'statusCode': 429, 'message': 'Ratelimit exceeded per day. Please upgrade your plan or wait 24 hours'}

############ [12:55] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error con la petici�n a API LLM. Respuesta recibida: {'statusCode': 429, 'message': 'Ratelimit exceeded per day. Please upgrade your plan or wait 24 hours'}

############ [12:55] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Error con la petici�n a API LLM. Respuesta recibida: {'statusCode': 429, 'message': 'Ratelimit exceeded per day. Please upgrade your plan or wait 24 hours'}

############ [13:20] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V).
color(gold; olive; ivory; crimson; indigo).

person(irish; welsh; scottish; belgian; moroccan).

type(pet, V) :- pet(V).
pet(dragon; gryphon; wyvern; chimera; wyrm).

type(drink, V) :- drink(V).
drink(wine; whiskey; gin; vodka; vermut).

type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5).
living_place(house, V) :- house(V).
same_place(irish, crimson).
same_place(moroccan, dragon).
same_place(welsh, gin).

left(olive, ivory).
same_place(olive, whiskey).

same_place(wyvern, pueblo).
same_place(gold, winston).

same_place(3, vodka).

same_place(belgian, 1).

next_to(ducados, wyrm).
next_to(chimera, winston).

same_place.camel, wine).

same_place(scottish, lucky_strike).

next_to(indigo, belgian).
next_to(vermut, ducados).

############ [13:20] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5).

living_place(house, V) :- house(V). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winton). next_to(wyrm, camel). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).

############ [13:20] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(1, belgian). same_place(3, ducados). next_to(ducados, wyrm). next_to(wyrm, winton). same_place(wyrm, winton). same_place(wyrm, wyrm). next_to(wyrm, camels). same_place(camels, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). same_place(indigo, vermut).

############ [13:20] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). house(1..5). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winton). next_to(wyrm, camel). same_place(scottish, lucky_strike). next_to(indigo, belgian). same_place(ducados, vermut).

############ [13:20] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Here are the outputs:


living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). house(1..5).

person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(belgian, 1). next_to(ducados, wyrm). next_to(wyrm, winston). same_place(wyrm, winton). same_place(chimera, winston). same_place.camel, wine). same_place(scottish, lucky_strike). next_to(indigo, belgian). next_to(ducados, vermut).

############ [13:40] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Here is the output:

language(german; spanish; arabic). seats_number(4). person(jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose).

############ [13:40] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Here is the answer:

language(german; spanish; arabic). seats_number(4). person(jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). opposite(martina, jose).

Note: I followed the exact format and predicate names as specified in the instructions. Let me know if this meets your requirements!.

############ [13:40] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Here is the solution:

language(german; spanish; arabic). seats_number(4). person(jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose).

############ [13:40] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Here is the output:

language(german; spanish; arabic). seats_number(4). person(jose; martina; claudia; pedro). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). opposite(martina, jose).

Note: I've followed the exact format and predicate naming conventions as specified in the instructions.

############ [13:40] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	Here is the answer:

seats_number(4).
person(jose; martina; claudia; pedro).
language(german; spanish; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).

############ [13:43] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
seats_number(4). person(jose; martina; claudia; pedro). language(german; spanish; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). opposite(martina, jose).
# Explicaci�n LN: Claudia is seated in the first chair, Pedro is seated in the third, Martina in the second and Jose is seated in the fourth.

############ [13:44] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
seats_number(4). person(jose; martina; claudia; pedro). language(german; spanish; arabic). speaks(pedro, arabic). speaks(jose, arabic). speaks(claudia, spanish). speaks(martina, german). not_next_to(claudia, pedro). next_to(pedro, arabic). opposite(martina, jose).
# Explicaci�n LN: Pedro is seated in the first chair, Martina in the second, Claudia in the third and Jose is seated in the fourth.

############ [13:47] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
house(1..5). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike). person(irish; welsh; scottish; belgian; moroccan). living_place(house, V) :- house(V). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). left(olive, ivory). same_place(olive, whiskey). same_place(3, vodka). same_place(1, belgian). same_place(indigo, belgian). next_to(ducados, wyrm). next_to(wyrm, winston). same_place(chimera, winston). same_place(camel, wine). same_place(scottish, lucky_strike).
# Explicaci�n LN: The Irish live in the crimson house number 1 with a wyvern as pet, drinking wine and smoking Camel tobacco. The Welsh inhabit the ivory house number 5 with a gryphon, consuming gin and preferring Pueblo cigarettes. The Scottish reside in the gold house number 3, keeping a wyrm, drinking vodka, and enjoying Lucky Strike tobacco. The Belgian occupy the indigo house number 2, having a chimera as pet, drinking Vermut, and smoking Winston cigarettes. The Moroccan live in the olive house number 4, owning a dragon, drinking whiskey, and preferring Ducados tobacco.

############ [14:52] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
seats_number(4).
person(jose; martina; claudia; pedro).
language(german; spanish; arabic).
speaks(pedro, arabic).
speaks(jose, arabic).
speaks(claudia, spanish).
speaks(martina, german).
not_next_to(claudia, pedro).
next_to(pedro, arabic).
opposite(martina, jose).
# Explicaci�n LN: Pedro is seated in the first chair, Martina in the second, Claudia in the third and Jose is seated in the fourth.

############ [22:38] LOG ############:

### Intento 0 de 4  ###

############ [17:2] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:2] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:2] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:2] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

house(1..5).

person(irish; welsh; scottish; belgian; moroccan).


############ [17:2] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5). living_place(house, V) :- house(V). same_place(irish, crimson). same_place(moroccan, dragon). same_place(welsh, gin). same_place(i, olive). same_place(whiskey, olive). same_place(wyvern, pueblo). same_place(winston, gold). same_place(vodka, 3). same_place(belgian, 1). next_to(ducados, wyrm). next_to(chimera, winston). same_place(wine, camel). same_place(scottish, lucky_strike). next_to(indigo, belgian). same_place(vermut, ducados).

############ [17:5] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo).

house(1..5).

person(irish; welsh; scottish; belgian; moroccan).


############ [17:5] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:5] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:5] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:5] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(gold; olive; ivory; crimson; indigo). person(irish; welsh; scottish; belgian; moroccan). type(pet, V) :- pet(V). pet(dragon; gryphon; wyvern; chimera; wyrm). type(drink, V) :- drink(V). drink(wine; whiskey; gin; vodka; vermut). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; winston; pueblo; lucky_strike).

house(1..5).

same_place(irish, crimson).
same_place(moroccan, dragon).
same_place(welsh, gin).
right(olive, ivory).
same_place(whiskey, olive).
same_place(wyvern, pueblo).
same_place(winston, gold).
same_place(3, vodka).
same_place(1, belgian).
next_to(ducados, wyrm).
next_to(winston, chimera).
same_place(camel, wine).
same_place(scottish, lucky_strike).
next_to(indigo, belgian).
same_place(vermut, ducados).
# Explicaci�n LN: The Irish person lives in the first house with a crimson color, has a wyrm as a pet, drinks wine, and smokes Camel tobacco. The Welsh person lives in the fifth house with a gold color, has a gryphon as a pet, drinks gin, and smokes Winston tobacco. The Scottish person lives in the fourth house with an olive color, has a chimera as a pet, drinks whiskey, and smokes Lucky Strike tobacco. The Belgian person lives in the third house with an ivory color, has a wyvern as a pet, drinks vodka, and smokes Pueblo tobacco. The Moroccan person lives in the second house with an indigo color, has a dragon as a pet, drinks vermouth, and smokes Ducados tobacco.

############ [17:36] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:36] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:36] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [17:36] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; yellow; green; red; blue).
house(1..5).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

# Explicaci�n LN: The British person lives in the yellow house number 2 and has a bird as a pet. The Danish person lives in the white house number 3 and has a fish as a pet. The German person lives in the blue house number 1 and has a dog as a pet. The Norwegian person lives in the red house number 5 and has a cat as a pet. The Swedish person lives in the green house number 4 and has a horse as a pet.

############ [18:0] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5).

person(brittish; danish; german; norwegian; swedish).

# Explicaci�n LN: The German person lives in the blue house. The British person lives in the green house. The Danish person lives in the yellow house. The Swedish person lives in the white house. The Norwegian person lives in the red house.

############ [18:12] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).

person(brittish; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

house(1..5).
living_place(house, V) :- house(V).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(dunhill, horse).
same_place(blue_master, beer).
same_place(prince, german).
right(norwegian, blue).
next_to(blends, water).


############ [18:12] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [18:12] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	Error en servidor: 502

############ [18:12] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [18:12] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

############ [18:59] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish).
house(1..5).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).


############ [18:59] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). living_place(house, V) :- house(V). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).


############ [18:59] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). next_to(blends, water).

# Explicaci�n LN: The British person lives in the house number 3, has a red house, keeps a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the house number 2, has a blue house, keeps a horse as pet, drinks tea and smokes Blends tobacco. The German person lives in the house number 4, has a green house, keeps a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the house number 1, has a yellow house, keeps a cat as pet, drinks water and smokes Dunhill tobacco. The Swedish person lives in the house number 5, has a white house, keeps a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [19:43] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese).

house(1..3). living_place(house, V) :- house(V).
# Explicaci�n LN: The English person lives in the second house, the Spanish person lives in the third house, and the Chinese person lives in the first house.

############ [19:45] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [19:45] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese).

# Explicaci�n LN: The Chinese person lives in the first house. The English person lives in the second house. The Spanish person lives in the third house.

############ [19:48] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green). color(white).


############ [19:48] LOG ############:

### Intento 1 de 4  ###

############ [19:54] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [19:54] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese).

# Explicaci�n LN: The English person lives in the house number 2.
# M�dulo gr�fico: OK

############ [19:57] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). person(spanish; english; chinese). house(1..3).

# Explicaci�n LN: The Spanish person lives in the third house.
# M�dulo gr�fico: OK

############ [1:18] LOG ############:

### Intento 0 de 4  ###

############ [1:33] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese).

house(1..3).


############ [1:33] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; purple). house(1..3). person(spanish; english; chinese). type(drink, V) :- drink(V). drink(tea; milk; soda). same_place(spanish, soda). 
# Explicaci�n LN: The English person lives in the first house, which is purple, drinks milk, but there is no mention of their car. The Spanish person lives in the third house and drinks soda. The Chinese person lives in the second house, which is red, and drinks tea.

############ [1:35] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).
house(1..5).

person(british; danish; german; norwegian; swedish).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).

# Explicaci�n LN: The British person lives in the green house number 2 with a bird as a pet. The Danish person resides in the yellow house number 3 with a fish as a pet. The German person dwells in the blue house number 1 with a dog as a pet. The Norwegian person lives in the red house number 5 with a cat as a pet. The Swedish person inhabits the white house number 4 with a horse as a pet.

############ [1:37] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(2, green). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, cat). next_to(dog, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).


############ [1:37] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

house(1..5).

person(brittish; danish; german; norwegian; swedish).


############ [1:37] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(blue, norwegian). same_place(blends, water).

############ [1:37] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5).

person(brittish; danish; german; norwegian; swedish).

# Explicaci�n LN: The German person lives in the blue house, the British person lives in the green house, the Danish person lives in the yellow house, the Swedish person lives in the white house, and the Norwegian person lives in the red house.
OK
############ [1:40] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).

############ [1:40] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue).

house(1..5).

person(brittish; danish; german; norwegian; swedish).


############ [1:40] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [1:40] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).

############ [1:40] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..5). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(blue_master, water).

############ [1:41] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..5). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). same_place(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(blends, water). next_to(norwegian, blue).
# Explicaci�n LN: The British person lives in the house number 3, has a red-colored house, keeps a bird as pet, drinks milk, and prefers Pall Mall tobacco. The Danish person resides in the house number 2 with a blue-colored house, owns a cat, consumes tea, and smokes blends. The German person lives in the house number 4 with a green-colored house, keeps a fish as pet, drinks coffee, and prefers Prince tobacco. The Norwegian person lives in the house number 1 with a yellow-colored house, owns a horse, drinks water, and smokes Dunhill tobacco. The Swedish person lives in the house number 5 with a white-colored house, keeps a dog as pet, drinks beer, and prefers Blue Master tobacco.

############ [16:40] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [16:40] LOG ############:

### Intento 1 de 4  ###

############ [19:25] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [19:25] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese).
house(1..3).
type(pet, V) :- pet(V). pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V). drink(coffee; water; tea).

same_place(spanish, red).
color(red).

same_place(english, blue).
color(blue).

same_place(chinese, tea).


############ [19:25] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	 house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the third house, has a cat as a pet, smokes Blue Master tobacco, drinks water, and his house is red-colored. The English person lives in the second house, has a dog as a pet, smokes Camel tobacco, drinks coffee, and his house is blue-colored. The Chinese person lives in the first house, has a duck as a pet, smokes Ducados tobacco, drinks tea, and his house is purple-colored.

############ [19:51] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; purple). same_place(spanish, red). same_place(chinese, purple). type(pet, V) :- pet(V). pet(dog; cat; horse). same_place(spanish, cat). same_place(english, dog).

# Explicaci�n LN: The Spanish person lives in the third house with a red color, owns a cat as pet. The English person resides in the first house and has a dog as pet. The Chinese person lives in the second house with a purple color and keeps a horse as pet.

############ [19:52] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	 house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the third house and owns a cat. He smokes Blue Master tobacco, drinks water and his house is painted red. The English person lives in the second house, has a dog as a pet, smokes Camel tobacco, drinks coffee and his house is painted blue. The Chinese person lives in the first house, owns a duck as a pet, smokes Ducados tobacco and drinks tea, and his house is purple in color.

############ [19:54] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). 

############ [19:54] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). 

############ [19:54] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). house(1..3). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). 

############ [19:54] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).

house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the third house, which is also red, has a cat as pet, smokes Camel cigarettes, drinks water, the English person lives in the second house, whose colour is blue, has a dog as pet, smokes Ducados tobacco and drinks coffee. Meanwhile, the Chinese person resides in the first house, which is purple, keeps a duck as pet and smokes Blue Master tobacco, with tea being their preferred beverage.

############ [19:56] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(red; blue; purple).

house(1..3).
person(spanish; english; chinese).

# Explicaci�n LN: The Spanish person lives in the blue house with the number 3. The English person lives in the red house with the number 2. The Chinese person lives in the purple house with the number 1.

############ [20:0] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:0] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [20:0] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:0] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog; cat; duck).

person(spanish; english; chinese).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; blue_master).


############ [20:0] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(red; blue; green; yellow; purple).
house(1..4).
person(spanish; english; chinese).
type(pet, V) :- pet(V).
pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V).
drink(coffee; water; tea).
same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).
same_place(purple, duck).


############ [20:5] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [20:5] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V).
drink(coffee; water; tea).
house(1..3).
person(spanish; english; chinese).

same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).

same_place(duck, purple).

############ [20:5] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:5] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).

############ [20:5] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). house(1..3). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, dog). same_place(english, cat). same_place(chinese, duck).


############ [20:9] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:9] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:9] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:9] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese).
house(1..3).
living_place(house, V) :- house(V).
type(pet, V) :- pet(V). pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V). drink(coffee; water; tea).

same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).

same_place(duck, purple).


############ [20:9] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:15] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(pet, V) :- pet(V).
pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V).
drink(coffee; water; tea).

person(spanish; english; chinese).
house(1..3).
color(red; blue; purple).

same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).
same_place(duck, purple).


############ [20:15] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).

############ [20:15] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). type(color, V) :- color(V). color(red; blue; purple). same_place(purple, duck).

# Explicaci�n LN: The Spanish person lives in the house with the number 3, has a cat as a pet, smokes Blue Master tobacco, drinks water, and the house is painted red. The English person lives in the house with the number 2, has a dog as a pet, smokes Camel tobacco, drinks coffee, and the house is painted blue. The Chinese person lives in the house with the number 1, has a duck as a pet, smokes Ducados tobacco, and drinks tea, and the house is painted purple.

############ [20:22] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the house with number 3, his house is painted red, he owns a cat, smokes Camel tobacco, drinks water. The English person lives in the house with number 2, his house is blue, he keeps a dog, smokes Ducados tobacco and drinks coffee. The Chinese person lives in the house with number 1, his house is purple, he owns a duck, and smokes Blue Master tobacco; he also drinks tea.

############ [20:27] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:27] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:27] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [20:27] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).

############ [20:27] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:34] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the house with the number 3, has a red color, owns a cat, smokes Camel tobacco, drinks water. The English person lives in the house with the number 2, has a blue color, keeps a dog, smokes Ducados tobacco, drinks coffee. The Chinese person lives in the house with the number 1, has a purple color, owns a duck, smokes Blue Master tobacco, drinks tea.

############ [20:38] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:38] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; green; blue; white). person(spanish; italian; romanian). same_place(spanish, red). same_place(italian, green). same_place(romanian, blue). house(1..4).


############ [20:38] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	 person(spanish; english; chinese).

house(1..3).


############ [20:38] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:38] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(tea, chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(duck, purple). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea).
# Explicaci�n LN: The Spanish person lives in the house with number 3, his house is colored red, he has a cat as a pet, smokes Camel cigarettes, drinks water, and the English person lives in the house with number 2, his house is colored blue, he keeps a dog, smokes Ducados cigarettes, and drinks coffee. Meanwhile, the Chinese person resides in the first house, which is colored purple, he owns a duck, and smokes Blue Master cigarettes.

############ [20:43] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	 person(spanish; english; chinese).
house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).

############ [20:43] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [20:43] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [20:43] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).

# Explicaci�n LN: The Spanish person lives in the house with the number 3, it's painted red, has a cat as a pet, smokes Camel tobacco, drinks water. The English person lives in the house with the number 2, it's blue, has a dog as a pet, smokes Ducados tobacco and drinks coffee. The Chinese person lives in the house with the number 1, it's purple, has a duck as a pet, smokes Blue Master tobacco and drinks tea.

############ [20:44] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [20:44] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
type(color, V) :- color(V).
color(white; red; green; yellow).
person(german; polish; english).
next_to(red, green).


############ [20:44] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [20:44] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	
house(1..2). living_place(house, V) :- house(V). person(spanish; chinese). same_place(spanish, red). same_place(chinese, tea). type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(duck, purple).


############ [20:44] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(purple, duck).

# Explicaci�n LN: The Spanish person lives in the third house, which is painted red, and has a cat as a pet, smokes Camel cigarettes, drinks water, whereas the English person lives in the second house, which is blue, keeps a dog, smokes Ducados, drinks coffee. Additionally, the Chinese person resides in the first house, which is purple, owns a duck, smokes Blue Master cigarettes, and drinks tea.

############ [20:48] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese).

house(1..3).


############ [20:48] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [20:48] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [20:48] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:48] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [20:51] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the house number 3, has a cat as pet, smokes Blue Master cigarettes, drinks water and his house is colored red. The English person lives in the house number 2, has a dog as pet, smokes Camel cigarettes, drinks coffee and his house is colored blue. The Chinese person lives in the house number 1, has a duck as pet, smokes Ducados and drinks tea, with a purple colored house.

############ [20:54] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple).
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese).
type(pet, V) :- pet(V). pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V). drink(coffee; water; tea).

same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).

same_place(duck, purple).

show_description.

# Explicaci�n LN: The Spanish person lives in the house number 3, has a red house, has a cat as a pet, smokes Camel cigarettes, drinks water. The English person lives in the house number 2, has a blue house, has a dog as a pet, smokes Ducados cigarettes, drinks coffee. The Chinese person lives in the house number 1, has a purple house, has a duck as a pet, smokes Blue Master cigarettes, drinks tea.

############ [21:0] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [21:0] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:0] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the third house, which is painted red, has a cat as pet, smokes Camel cigarettes, drinks water and lives in the house number 3. The English person lives in the second house, which is painted blue, has a dog as pet, smokes Ducados, drinks coffee. The Chinese person lives in the first house, which is painted purple, has a duck as pet, smokes Blue Master and drinks tea.

############ [21:2] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:2] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	Lo siento, no soy capaz de procesar esto. Por favor, reescribe tu puzzle explicando el estado de forma precisa o usando otras palabras. Here are the outputs:

IN: The house colours are White, Red, Green and Yellow. There's a German, a Polish and an English. The person living in the Red house is the neighbor of the owner of the Green house.

OUT: living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german, polish, english). next_to(red, green).

IN: The owner of the Dog lives next to the owner of the Red house. The Red house owner lives in the first house. There are 9 houses.

OUT: living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog). type(color, V) :- color(V). color(red). next_to(dog, red). house(1..9).

IN: There are ten houses. The Swedish lives in the last one. The Spanish lives in the first one. The German lives in the third one.

OUT: house(1..10). living_place(house, V) :- house(V). person(swedish; spanish; german). same_place(swedish, 10). same_place(spanish, 1). same_place(german, 3).

...

Note: Please let me know if you want me to continue generating the outputs for the rest of the inputs.

############ [21:2] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [21:2] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

# Explicaci�n LN: The Spanish person lives in the house number 3, his house is painted red, he owns a cat, smokes Camel cigarettes, drinks water. The English person lives in the house number 2, his house is painted blue, he keeps a dog, smokes Ducados cigarettes and drinks coffee. The Chinese person lives in the house number 1, his house is painted purple, he owns a duck, smokes Blue Master cigarettes and drinks tea.

############ [21:28] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	Timeout por parte del servidor. Probablemente servidor ca�do o saturado.

############ [21:28] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). same_place(spanish, 1). type(color, V) :- color(V). color(red). same_place(spanish, red). same_place(english, 2). type(color, V) :- color(V). color(blue). same_place(english, blue). same_place(chinese, 3). 
# Explicaci�n LN: The Spanish person lives in the first house, has a duck as pet, smokes Camel tobacco, drinks tea, and the house is red. The English person lives in the second house, has a cat as pet, smokes Ducados tobacco, drinks water, and the house is blue. The Chinese person lives in the third house, has a dog as pet, smokes Blue Master tobacco, and drinks coffee.

############ [21:29] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [21:29] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:29] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:29] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:29] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green). 

############ [21:30] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [21:30] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).
 person(spanish; english; chinese).
type(pet, V) :- pet(V). pet(dog; cat; duck).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master).
type(drink, V) :- drink(V). drink(coffee; water; tea).
color(red). color(blue). color(purple).
house(1..3).
same_place(spanish, red).
same_place(english, blue).
same_place(chinese, tea).
same_place(duck, purple).

############ [21:30] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [21:30] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [21:30] LOG ############:

### Intento 4 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [21:41] LOG ############:

### Intento 0 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V).  person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:41] LOG ############:

### Intento 1 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:41] LOG ############:

### Intento 2 de 4  ###
# # Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).

############ [21:41] LOG ############:

### Intento 3 de 4  ###
# # Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(color, V) :- color(V). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(tea, chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). same_place(duck, purple). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). 
# Explicaci�n LN: The Spanish person lives in the house number 3, his house is painted red, he has a cat as pet, smokes Camel cigarettes, drinks water and the English person lives in the house number 2, his house is painted blue, he keeps a dog as pet, smokes Ducados cigarettes, drinks coffee and the Chinese person lives in the house number 1, his house is painted purple, he has a duck as pet and smokes Blue Master cigarettes, drinking tea.

############ [10:16] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [10:16] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck).


############ [10:16] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [10:16] LOG ############:

### Intento 3 de 4  ###
The Spanish person lives in the blue house with number 3. The English person lives in the red house with number 2. The Chinese person lives in the purple house with number 1.

############ [10:29] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). color(red; blue; purple). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck). show_graphic.


############ [10:29] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). house(1..3). living_place(house, V) :- house(V). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). show_graphic.


############ [10:29] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; blue; purple). house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). show_graphic.


############ [10:34] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). show_description.


############ [10:34] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple).


############ [10:34] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	living_place(house, V) :- house(V). house(1..3). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck). show_description.

############ [10:34] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	
house(1..3). living_place(house, V) :- house(V). person(spanish; english; chinese). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(purple, duck). show_description.


############ [10:34] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	
person(spanish; english; chinese). house(1..3). living_place(house, V) :- house(V). type(pet, V) :- pet(V). pet(dog; cat; duck). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(ducados; camel; blue_master). type(drink, V) :- drink(V). drink(coffee; water; tea). same_place(spanish, red). same_place(english, blue). same_place(chinese, tea). same_place(duck, purple). show_description.


############ [10:40] LOG ############:

### Intento 0 de 4  ###
The Spanish person lives in the house number 3, has a cat as a pet, smokes Blue Master tobacco, drinks water, and his house is painted red. The English person lives in the house number 2, has a dog as a pet, smokes Camel tobacco, drinks coffee, and his house is painted blue. The Chinese person lives in the house number 1, has a duck as a pet, smokes Ducados tobacco, and drinks tea. His house is painted purple.

############ [16:40] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). person(brittish; danish; german; norwegian; swedish). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).


############ [16:40] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). same_place(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(blends, water). next_to(horse, dunhill). next_to(norwegian, blue). show_graphic. show_description.


############ [16:40] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [16:40] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(brittish; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).

############ [16:40] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).

show_graphic.


############ [17:0] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; white; blue; yellow).
person(brittish; danish; german; norwegian; swedish).
house(1..5).
living_place(house, V) :- house(V).
type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
next_to(blends, cat).
next_to(horse, dunhill).
same_place(blue_master, beer).
same_place(german, prince).
next_to(norwegian, blue).
same_place(blends, water).

show_graphic.

############ [17:0] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	living_place(house, V) :- house(V). type(color, V) :- color(V). color(white; red; green; yellow). person(german; polish; english). next_to(red, green).


############ [17:0] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(red; green; blue; yellow; white). house(1..4). living_place(house, V) :- house(V). person(swedish; danish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(swedish, red). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(1, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(4, prince). next_to(danish, blue). same_place(blends, water). show_graphic.


############ [17:0] LOG ############:

### Intento 3 de 4  ###
The British person lives in the second house, which is green, and has a bird as a pet, drinks water and smokes Prince tobacco. The Danish person lives in the third house, which is yellow, and has a fish as a pet, drinks milk and smokes Pall Mall tobacco. The German person lives in the first house, which is blue, and has a dog as a pet, drinks tea and smokes Dunhill tobacco. The Norwegian person lives in the fifth house, which is red, and has a cat as a pet, drinks coffee and smokes Blue Master tobacco. The Swedish person lives in the fourth house, which is white, and has a horse as a pet, drinks beer and smokes Blends tobacco.

############ [17:11] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).


############ [17:11] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [17:11] LOG ############:

### Intento 2 de 4  ###
The British person lives in the house number 3, it is red, he keeps a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the house number 2, his house is blue, he has a horse as pet, drinks tea and smokes blends tobacco. The German person resides in the house number 4, his house is green, he has a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the house number 1, his house is yellow, he keeps a cat as pet, drinks water and smokes Dunhill tobacco. Finally, the Swedish person lives in the house number 5, his house is white, he has a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [18:37] LOG ############:

### Intento 0 de 4  ###
The Polish person lives in the house number 1. The German person lives in the house number 2. The British person lives in the house number 3.

############ [18:39] LOG ############:

### Intento 0 de 4  ###
The Polish person lives in the house number 1. The German person lives in the house number 2. And the British person lives in the house number 3.

############ [18:40] LOG ############:

### Intento 0 de 4  ###
The Polish person lives in the house number 1. The German person lives in the house number 2. And the British person lives in the house number 3.

############ [21:23] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
person(brittish; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).


############ [21:23] LOG ############:

### Intento 1 de 4  ###
The British person lives in the third house, it's painted red, he keeps a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person resides in the second house, whose color is blue, has a horse as a pet, drinks tea and prefers Blends tobacco. The German person lives in the fourth house, which is green, has a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the first house, whose color is yellow, has a cat as pet, drinks water and smokes Dunhill tobacco. The Swedish person resides in the fifth house, whose color is white, has a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
The British person lives in the third house, which is red, and has a bird as pet, drinks milk, and smokes Pall Mall tobacco. The Danish person resides in the second blue house and keeps a horse as pet, drinks tea, and uses Blends tobacco. The German person lives in the fourth green house, has a fish as pet, drinks coffee, and smokes Prince tobacco. The Norwegian person lives in the first yellow house, has a cat as pet, drinks water, and smokes Dunhill tobacco. Finally, the Swedish person resides in the fifth white house, has a dog as pet, drinks beer, and smokes Blue Master tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
The British person lives in the 5th house, which is red, and has a horse as a pet, drinks beer and smokes Blue Master tobacco. The Danish person resides in the 4th house, which is yellow, and has a bird as a pet, drinks tea and uses Dunhill tobacco. The German person lives in the 2nd house, which is green, and has a cat as a pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the 1st house, which is blue, and has a fish as a pet, drinks water and smokes Blends tobacco. The Swedish person resides in the 3rd house, which is white, and has a dog as a pet, drinks milk and uses Pall Mall tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
The British person lives in the house number 3, it is red, has a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the second blue house, has a horse as pet, drinks tea and smokes blends tobacco. The German person resides in the fourth green house, has a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian lives in the first yellow house, has a cat as pet, drinks water and smokes Dunhill tobacco. The Swedish person dwells in the fifth white house, has a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 1 de 4  ###
The British person lives in the third house, it is painted red, has a bird as a pet, drinks milk, and uses Pall Mall tobacco brand. The Danish person resides in the second house, which is blue, keeps a horse as pet, drinks tea, and uses Blends tobacco brand. The German person lives in the fourth house, which is green, has a fish as pet, drinks coffee, and uses Prince tobacco brand. The Norwegian person resides in the first house, which is yellow, keeps a cat as pet, drinks water, and uses Dunhill tobacco brand. The Swedish person lives in the fifth house, which is white, keeps a dog as pet, drinks beer, and uses Blue Master tobacco brand.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5).

person(british; danish; german; norwegian; swedish).


############ [0:17] LOG ############:

### Intento 1 de 4  ###
The British person lives in the third house, which is red, has a bird as pet, drinks milk and smokes Pall Mall. The Danish person lives in the second house, which is blue, has a horse as pet, drinks tea and smokes Blends. The German person lives in the fourth house, which is green, has a fish as pet, drinks coffee and smokes Prince. The Norwegian person lives in the first house, which is yellow, has a cat as pet, drinks water and smokes Dunhill. The Swedish person lives in the fifth house, which is white, has a dog as pet, drinks beer and smokes Blue Master.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

person(british; danish; german; norwegian; swedish). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

show_description. show_graphic.

############ [0:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

person(british). same_place(british, red). person(swedish). same_place(swedish, dog). type(drink, V) :- drink(V). drink(tea). same_place(danish, tea). type(pet, V) :- pet(V). pet(bird). same_place(pall_mall, bird). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(dunhill). same_place(dunhill, yellow). type(drink, V) :- drink(V). drink(milk). same_place(3, milk). person(norwegian). same_place(norwegian, 1). next_to(blue, norwegian). next_to(blends, cat). next_to(dunhill, horse). same_place(blue_master, beer). type(drink, V) :- drink(V). drink(water). same_place(blends, water). person(german). same_place(german, prince).

show_description.
show_graphic.

############ [0:17] LOG ############:

### Intento 2 de 4  ###
The British person lives in the third house, which is red, keeps a bird as a pet, drinks milk, and smokes Pall Mall tobacco. The Danish person lives in the second blue house, keeps a horse as a pet, drinks tea, and smokes Blends tobacco. The German person lives in the fourth green house, keeps a fish as a pet, drinks coffee, and smokes Prince tobacco. The Norwegian person lives in the first yellow house, keeps a cat as a pet, drinks water, and smokes Dunhill tobacco. The Swedish person lives in the fifth white house, keeps a dog as a pet, drinks beer, and smokes Blue Master tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). same_place(blends, cat). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). next_to(blends, dunhill). right(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). next_to(blends, water).


############ [0:17] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). next_to(blends, water).


############ [0:17] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). next_to(blends, water).


############ [0:18] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). right(norwegian, blue). next_to(blends, water).


############ [0:18] LOG ############:

### Intento 1 de 4  ###
The British person lives in the house number 3, it's red, has a bird as pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the house number 2, it's blue, has a horse as pet, drinks tea and smokes Blends tobacco. The German person lives in the house number 4, it's green, has a fish as pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the house number 1, it's yellow, has a cat as pet, drinks water and smokes Dunhill tobacco. The Swedish person lives in the house number 5, it's white, has a dog as pet, drinks beer and smokes Blue Master tobacco.

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). same_place(2, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
person(british; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). same_place(blends, water).

show_description. show_graphic.


############ [0:17] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	
person(british; danish; german; norwegian; swedish). house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(dunhill, horse). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).

############ [0:17] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	
house(1..5).
living_place(house, V) :- house(V).
person(british; danish; german; norwegian; swedish).
type(color, V) :- color(V).
color(yellow; green; white; red; blue).
type(pet, V) :- pet(V).
pet(dog; fish; bird; horse; cat).
type(drink, V) :- drink(V).
drink(beer; coffee; tea; milk; water).
type(tobacco_brand, V) :- tobacco_brand(V).
tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(british, red).
same_place(swedish, dog).
same_place(danish, tea).
left(green, white).
same_place(green, coffee).
same_place(pall_mall, bird).
same_place(yellow, dunhill).
same_place(3, milk).
same_place(norwegian, 1).
left(blends, cat).
next_to(blends, horse).
right(blue_master, beer).
same_place(german, prince).
right(norwegian, blue).
next_to(blends, water).

############ [0:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). color(yellow; green; white; red; blue). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). person(british; danish; german; norwegian; swedish). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water). show_description. show_graphic.


############ [0:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). person(british; danish; german; norwegian; swedish). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [0:17] LOG ############:

### Intento 4 de 4  ###
The British person lives in the third house, which is red, and has a bird as pet, drinks milk and smokes pall mall tobacco. The Danish person lives in the second house, which is blue, and has a horse as pet, drinks tea and smokes blends tobacco. The German person lives in the fourth house, which is green, and has a fish as pet, drinks coffee and smokes prince tobacco. The Norwegian person lives in the first house, which is yellow, and has a cat as pet, drinks water and smokes dunhill tobacco. The Swedish person lives in the fifth house, which is white, and has a dog as pet, drinks beer and smokes blue master tobacco.

############ [13:29] LOG ############:

### Intento 0 de 4  ###
The British person lives in the house number 2, has a horse as a pet, drinks water, smokes blends tobacco, and the house is colored red. The Danish person lives in the house number 5, has a bird as a pet, drinks tea, smokes Pall Mall tobacco, and the house is colored white. The German person lives in the house number 4, has a fish as a pet, drinks coffee, smokes Prince tobacco, and the house is colored green. The Norwegian person lives in the house number 1, has a cat as a pet, drinks beer, smokes Blue Master tobacco, and the house is colored blue. The Swedish person lives in the house number 3, has a dog as a pet, drinks milk, smokes Dunhill tobacco, and the house is colored yellow.

############ [23:43] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:43] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:43] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:43] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:43] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:45] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:45] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:45] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:45] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [23:45] LOG ############:

### Intento 4 de 4  ###
# Modelo ASP sacado: 
	Error en servidor: 500

############ [11:17] LOG ############:

### Intento 0 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). left(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).


############ [11:17] LOG ############:

### Intento 1 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(norwegian, blue). same_place(blends, water).


############ [11:17] LOG ############:

### Intento 2 de 4  ###
# Modelo ASP sacado: 
	
house(1..5). living_place(house, V) :- house(V). type(color, V) :- color(V). color(yellow; green; white; red; blue). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince). person(brittish; danish; german; norwegian; swedish). same_place(brittish, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). next_to(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(prince, german). next_to(blue, norwegian). same_place(blends, water).


############ [11:17] LOG ############:

### Intento 3 de 4  ###
# Modelo ASP sacado: 
	type(color, V) :- color(V). color(yellow; green; white; red; blue). house(1..5). living_place(house, V) :- house(V). person(british; danish; german; norwegian; swedish). type(pet, V) :- pet(V). pet(dog; fish; bird; horse; cat). type(drink, V) :- drink(V). drink(beer; coffee; tea; milk; water). type(tobacco_brand, V) :- tobacco_brand(V). tobacco_brand(blends; blue_master; dunhill; pall_mall; prince).

same_place(british, red). same_place(swedish, dog). same_place(danish, tea). left(green, white). same_place(green, coffee). same_place(pall_mall, bird). same_place(yellow, dunhill). same_place(3, milk). same_place(norwegian, 1). left(blends, cat). next_to(horse, dunhill). same_place(blue_master, beer). same_place(german, prince). right(norwegian, blue). next_to(blends, water).

show_description.

############ [11:17] LOG ############:

### Intento 4 de 4  ###

############ [11:19] LOG ############:

### Intento 0 de 4  ###
The Brittish person lives in the third house, which is red, and has a bird as a pet, drinks milk and smokes Pall Mall. The Danish person lives in the second house, which is blue, and has a horse as a pet, drinks tea and smokes Blends. The German person lives in the fourth house, which is green, and has a fish as a pet, drinks coffee and smokes Prince. The Norwegian person lives in the first house, which is yellow, and has a cat as a pet, drinks water and smokes Dunhill. The Swedish person lives in the fifth house, which is white, and has a dog as a pet, drinks beer and smokes Blue Master.

############ [13:12] LOG ############:

### Intento 0 de 4  ###
The British person lives in the third house, which is red, has a bird as a pet, drinks milk and smokes Pall Mall tobacco. The Danish person lives in the second house, which is blue, has a horse as a pet, drinks tea and smokes Blends tobacco. The German person lives in the fourth house, which is green, has a fish as a pet, drinks coffee and smokes Prince tobacco. The Norwegian person lives in the first house, which is yellow, has a cat as a pet, drinks water and smokes Dunhill tobacco. The Swedish person lives in the fifth house, which is white, has a dog as a pet, drinks beer and smokes Blue Master tobacco.
